[app:app]
use = config:base.ini#app
session.secret = %(here)s/session-secret.b64
file_upload_bucket = ${file_upload_bucket}
file_wfout_bucket = ${file_wfout_bucket}
blob_bucket = ${blob_bucket}
system_bucket = ${system_bucket}
# blob_store_profile_name = encoded-4dn-files
accession_factory = ${accession_factory}
elasticsearch.server = ${elasticsearch_instance}
snovault.app_version = ${encoded_version}
env.name = ${env_name}
encoded_version = ${encoded_version}
mpindexer = ${mpindexer}
indexer = ${indexer}
indexer.namespace = ${env_name}
elasticsearch.aws_auth = true
production = true

load_test_data = ${load_test_data}
sqlalchemy.url = ${sqlalchemy_url}
[composite:indexer]
use = config:base.ini#indexer

[pipeline:main]
pipeline =
    config:base.ini#memlimit
    egg:PasteDeploy#prefix
    app

[pipeline:debug]
pipeline =
    egg:repoze.debug#pdbpm
    app
set pyramid.includes =
    pyramid_translogger

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543
threads = 1

[loggers]
keys = root, encoded, encoded_listener

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console

[logger_encoded]
level = WARN
handlers = console
qualname = encoded
propagate = 0

[logger_encoded_listener]
level = INFO
handlers = console
qualname = snovault.elasticsearch.es_index_listener
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(message)s
