[buildout]
extensions =
    mr.developer
extends = versions.cfg
# XXX https://bitbucket.org/pypa/setuptools/issue/133/find-links-should-override-allow-hosts
allow-hosts =
    pypi.org
    files.pythonhosted.org
    github.com
    *
find-links =
    https://github.com/4dn-dcic/venusian/tarball/1.0.1.dev40#egg=venusian-1.0.1.dev40
    https://github.com/RDFLib/rdflib/tarball/f2bef7a#egg=rdflib-4.2.2.dev0
show-picked-versions = true
update-versions-file = versions.cfg
parts =
    encoded
    production-ini
    production
    production-indexer
    production-fileindexer
    npm-install
    compile-js
    compile-css
    test
    aws
    aws-ip-ranges
develop = .
sources-dir = develop
auto-checkout = snovault
		Submit4DN
		dcicutils

[sources]
snovault = git https://github.com/4dn-dcic/snovault.git branch=master
Submit4DN = git https://github.com/4dn-dcic/Submit4DN.git rev=0.9.7
dcicutils = git https://github.com/4dn-dcic/utils.git branch=master
jsonschema = git https://github.com/4dn-dcic/jsonschema_serialize_fork.git
rubygemsrecipe = hg https://bitbucket.org/lrowe/rubygemsrecipe
subprocess_middleware = git https://github.com/4dn-dcic/subprocess_middleware.git
subprocess-middleware-node = git https://github.com/4dn-dcic/subprocess-middleware-node.git egg=false
pyramid = git https://github.com/Pylons/pyramid.git
pyramid_multiauth = git https://github.com/mozilla-services/pyramid_multiauth.git
pyramid_retry = git https://github.com/Pylons/pyramid_retry.git
pytest = hg https://bitbucket.org/hpk42/pytest
rdflib = git https://github.com/RDFLib/rdflib.git
rdflib-jsonld = git https://github.com/RDFLib/rdflib-jsonld.git
webtest = git https://github.com/Pylons/webtest.git
WSGIProxy2 = git https://github.com/gawel/WSGIProxy2.git
zope.sqlalchemy = git https://github.com/zopefoundation/zope.sqlalchemy.git

[versions]
# Hand set versions
pyramid = 1.10.1
# Update .travis.yml and cloud-config.yml when updating buildout
six = 1.11.0

[encoded]
recipe = zc.recipe.egg
eggs =
    SPARQLWrapper
    encoded
    pyramid
    waitress
    psycopg2-binary
    repoze.debug
    rutter
    pyramid_translogger

interpreter = py

[aws]
recipe = zc.recipe.egg
eggs =
    awscli

[production-ini]
recipe = collective.recipe.template
input = ${buildout:directory}/production.ini.in
output = ${buildout:directory}/production.ini
accession_factory = encoded.server_defaults.enc_accession
file_upload_bucket = elasticbeanstalk-encoded-4dn-files
file_wfout_bucket = elasticbeanstalk-encoded-4dn-wfout
blob_bucket = elasticbeanstalk-encoded-4dn-blobs
system_bucket = elasticbeanstalk-encoded-4dn-system
#region_search_instance = region-search-test.instance.encodedcc.org:9200
#region_search_instance = ec2-52-23-165-123.compute-1.amazonaws.com:9200
#elasticsearch_instance = ec2-52-23-165-123.compute-1.amazonaws.com:9200
region_search_instance = 172.31.49.128:9872
# TODO set elastic search server from bootstrap
elasticsearch_instance = 172.31.49.128:9872
elasticsearch_index = snovault
load_test_data = encoded.loadxl:load_test_data
indexer_processes =
encoded_version = v-e83c87a
sqlalchemy_url =
env_name = local
create_tables = true
indexer = true
mpindexer = true


[production]
recipe = collective.recipe.modwsgi
eggs =
    encoded
    psycopg2-binary
config-file = ${buildout:directory}/production.ini

[production-indexer]
<= production
app_name = indexer

[production-fileindexer]
<= production
app_name = fileindexer

[npm-install]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm_config_cache="" npm install

[compile-js]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds = NODE_PATH="" npm run build | grep -v "node_modules\|\[built\]"

[compile-css]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    npm run build-scss

[aws-ip-ranges]
recipe = collective.recipe.cmd
on_install = true
on_update = true
cmds =
    curl -o aws-ip-ranges.json https://ip-ranges.amazonaws.com/ip-ranges.json

[test]
recipe = zc.recipe.egg
eggs =
    coverage
    encoded[test]
    psycopg2-binary
    pytest
    pytest-timeout
    pytest-instafail
    pytest-cov
scripts =
    coverage
    py.test=test

# Avoid ``Unix-domain socket path "..." is too long (maximum 103 bytes)``
initialization = import tempfile; tempfile.tempdir = '/tmp'
