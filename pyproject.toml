[tool.poetry]
# Note: Various modules refer to this system as "encoded", not "fourfront".
name = "encoded"
version = "2.3.13"
description = "4DN-DCIC Fourfront"
authors = ["4DN-DCIC Team <support@4dnucleome.org>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/4dn-dcic/fourfront"
repository = "https://github.com/4dn-dcic/fourfront"
documentation = "https://github.com/4dn-dcic/fourfront"
packages = [
  { include="encoded", from="src" }
]
classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    'Development Status :: 3 - Alpha',

    # Indicate who your project is intended for
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'Framework :: Pyramid',

    # Pick your license as you wish (should match "license" above)
    'License :: OSI Approved :: MIT License',
    'Topic :: Database :: Database Engines/Servers',

    # Specify the Python versions you support here. In particular, ensure
    # that you indicate whether you support Python 2, Python 3 or both.
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.6'
]

[tool.poetry.dependencies]
python = ">=3.6.1,<3.7"
boto3 = "^1.10.50"
botocore = "^1.13.50"
certifi = ">=2020.11.8"
chardet = "3.0.4"
# TODO: These next three are not used in cgap. Are they really needed? -kmp 29-Apr-2020
# I think .recipe is a buildout thing so I'm going to try commenting this out as a start. Delete later. -kmp 15-Dec-2020
# "collective.recipe.cmd" = "0.11"
# "collective.recipe.modwsgi" = "2.1"
# "collective.recipe.template" = "1.13"
colorama = "0.3.3"
dcicsnovault = "4.1.0"
dcicutils = "^1.4.0"
docutils = "0.12"
elasticsearch = "6.4.0"
elasticsearch-dsl = "^6.4.0"
execnet = "1.4.1"
future = "^0.15.2"
humanfriendly = "1.44.5"
hupper = "1.5"
idna = "2.7"
isodate = "0.5.4"
jmespath = "0.9.0"
jsonschema-serialize-fork = "2.1.1"
keepalive = "0.5"
loremipsum = "1.0.5"
netaddr = ">=0.7.18,<1"
passlib = "1.6.5"
PasteDeploy = "1.5.2"
pbkdf2 = "1.3"
Pillow = "^6.2.2"  # 6.x.x should work for CGAP -Will 11/18/2020
plaster = "1.0"
plaster-pastedeploy = "0.6"
psutil = "^5.6.6"
psycopg2-binary = "2.7.7"
py = "1.4.31"
pyasn1 = "0.1.9"
PyBrowserID = "^0.10.0"
pycparser = "2.14"
PyJWT = "1.5.3"
pyparsing = "2.1.1"
pyramid = "1.10.4"
pyramid-localroles = ">=0.1,<1"
pyramid-multiauth = "0.8.0"
pyramid-retry = "1.0"
pyramid-tm = "2.2.1"
pyramid-translogger = "^0.1"
python-dateutil = "2.7.3"
# python-magic is presently pinned to 0.4.15 in lockstep with dcicsnovault's requirements. See explanation there.
python-magic = "0.4.15"
pytz = ">=2020.4"
rdflib = "^4.2.2"
rdflib-jsonld = "0.3"
requests = "^2.23.0"
rfc3987 = "^1.3.6"
rsa = "3.3"
rutter = ">=0.2,<1"
s3transfer = "^0.2.0"
simplejson = "^3.17.0"
SPARQLWrapper = "1.7.6"
SQLAlchemy = "1.3.16"  # Pinned because >=1.3.17 is broken for us (circular constraints prevent deletes)
structlog = ">=18.1.0,<20"
submit4dn = "0.9.7"
subprocess-middleware = ">=0.3,<1"
# Useful for picking apart pyproject.toml
toml = ">=0.10.1,<1"
transaction = "2.4.0"
translationstring = "1.3"
uptime = ">=3.0.1,<4"
urllib3 = "^1.24.3"
venusian = "^1.2.0"
waitress = "1.2.0"  # 1.4.3 had lots of problems, so pin this -kmp 18-May-2020
WebOb = "1.8.5"
WebTest = "^2.0.21"
wheel = "0.29.0"
WSGIProxy2 = "0.4.2"
xlrd = "^1.0.0"
xlwt = "1.2.0"
"zope.deprecation" = "4.4.0"
"zope.interface" = "4.6.0"
"zope.sqlalchemy" = "1.3"
sentry-sdk = "^0.16.5"

[tool.poetry.dev-dependencies]
# PyCharm says boto3-stubs contains useful type hints
boto3-stubs = ">=1.16.15.0"
coverage = ">=5.2"
codacy-coverage = ">=1.3.11"
coveralls = ">=2.1.1"
flake8 = "^3.7.8"
flaky = "3.6.1"
# flask only for moto[server]
flask = ">=1.1.1"
# Here AND ELSEWHERE (related scripts), we pin use of moto 1.3.7.
# I asked Will today why we're pinning that and he explained to me that above there (i.e., in version 1.3.8),
# an SQS-related bug is introduced, and that we cannot upgrade versions until this bug is fixed.
# His belief is that moto has not had a "true" release in months, so we will have to stick with this version.
# I searched the web and see this bug introduced in 1.3.8 and allegedly fixed. -kmp 29-Apr-2020
# https://github.com/spulec/moto/issues/2172
# Here's another report that might be related and it's not clear if this is fixed:
# https://gitmemory.com/issue/spulec/moto/2118/474917895
# TODO: Investigate whether this bug is fixed. If it is, update the version.
#       If not, get a reference to an open bug report here so we can check back periodically.
moto = "1.3.7"
# TODO: Investigate whether a major version upgrade is allowable for 'pytest', which is several versions behind.
pytest = "2.9.2"
pytest-cov = "2.2.1"
pytest-exact-fixtures = "0.1"
pytest-instafail = "0.3.0"
pytest-mock = "0.11.0"
pytest-timeout = "1.0.0"
pytest-xdist = "1.14"
# responses = "^0"
"repoze.debug" = "1.0.2"

[tool.poetry.scripts]
# snovault commands
batchupgrade = "snovault.batchupgrade:main"
create-mapping = "snovault.elasticsearch.create_mapping:main"
es-index-listener = "snovault.elasticsearch.es_index_listener:main"
wipe-test-indices = "snovault.commands.wipe_test_indices:main"
# encoded commands
add-date-created = "encoded.commands.add_date_created:main"
check-rendering = "encoded.commands.check_rendering:main"
clear-db-es-contents = "encoded.commands.clear_db_es_contents:main"
configure-kibana-index = "encoded.commands.configure_kibana_index:main"
create-mapping-on-deploy = "encoded.commands.create_mapping_on_deploy:main"
dev-servers = "encoded.dev_servers:main"
dis2pheno = "encoded.commands.parse_hpoa:main"
es-index-data = "encoded.commands.es_index_data:main"
export-data = "encoded.commands.export_data:main"
extract-test-data = "encoded.commands.extract_test_data:main"
import-data = "encoded.commands.import_data:main"
jsonld-rdf = "encoded.commands.jsonld_rdf:main"
load-access-keys = "encoded.commands.load_access_keys:main"
load-data = "encoded.commands.load_data:main"
load-items = "encoded.commands.load_items:main"
migrate-attachments-aws = "encoded.commands.migrate_attachments_aws:main"
migrate-dataset-type = "encoded.commands.migrate_dataset_type:main"
migrate-files-aws = "encoded.commands.migrate_files_aws:main"
owl-to-items = "encoded.commands.generate_items_from_owl:main"
profile = "encoded.commands.profile:main"
run-upgrade-on-inserts = "encoded.commands.run_upgrader_on_inserts:main"
spreadsheet-to-json = "encoded.commands.spreadsheet_to_json:main"
update-inserts-from-server = "encoded.commands.update_inserts_from_server:main"
verify-item = "encoded.commands.verify_item:main"


[paste.app_factory]
main = "encoded:main"

[paste.composite_factory]
indexer = "snovault.elasticsearch.es_index_listener:composite"

[paste.filter_app_factory]
memlimit = "encoded.memlimit:filter_app"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"
