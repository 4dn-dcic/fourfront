[tool.poetry]
# Note: Various modules refer to this system as "encoded", not "fourfront".
name = "encoded"
version = "5.3.15"
description = "4DN-DCIC Fourfront"
authors = ["4DN-DCIC Team <support@4dnucleome.org>"]
license = "MIT"
readme = "README.rst"
homepage = "https://github.com/4dn-dcic/fourfront"
repository = "https://github.com/4dn-dcic/fourfront"
documentation = "https://github.com/4dn-dcic/fourfront"
packages = [
  { include="encoded", from="src" }
]
classifiers = [
    # How mature is this project? Common values are
    #   3 - Alpha
    #   4 - Beta
    #   5 - Production/Stable
    'Development Status :: 3 - Alpha',

    # Indicate who your project is intended for
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'Framework :: Pyramid',

    # Pick your license as you wish (should match "license" above)
    'License :: OSI Approved :: MIT License',
    'Topic :: Database :: Database Engines/Servers',

    # Specify the Python versions you support here. In particular, ensure
    # that you indicate whether you support Python 2, Python 3 or both.
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8'
]

[tool.poetry.dependencies]
python = ">=3.8.1,<3.9"
awscli = ">=1.25.36"
boto3 = "^1.24.36"
botocore = "^1.27.36"
certifi = ">=2021.5.30"
chardet = "3.0.4"
colorama = "0.3.3"
# At least on Mac M1 if cryptography package is later than 39.x.x (i.e. 40.x.x and up)
# we get odd 'pyo3_runtime.PanicException: Python API call failed' error on import
# of cryptography.hazmat.bindings._rust in cryptography package. 2023-04-21.
cryptography = "39.0.2"
dcicsnovault = "^7.1.1"
dcicutils = "^6.0.0"
elasticsearch = "7.13.4"
elasticsearch-dsl = "^7.0.0"  # TODO: port code from cgap-portal to get rid of uses
execnet = "1.4.1"
future = ">=0.18.2,<1"
humanfriendly = "^1.44.9"
hupper = "1.5"
idna = "^2.10"
isodate = "0.6.0"
jmespath = "0.9.0"
jsonschema-serialize-fork = "^2.1.1"
Markdown = "^3.4.3"
netaddr = ">=0.8.0,<1"
passlib = "^1.7.4"
PasteDeploy = "1.5.2"
pbkdf2 = "1.3"
# Pillow = "^6.2.2"
plaster = "1.0"
plaster-pastedeploy = "0.6"
psutil = "^5.9.0"
psycopg2-binary = "^2.9.3"
py = ">=1.10.0"  # required for pytest
PyBrowserID = "^0.10.0"
PyJWT = "1.5.3"
pyparsing = "^2.4.7"
pyramid = "1.10.4"
pyramid_localroles = ">=0.1,<1"
pyramid-multiauth = ">=0.9.0,<1"
pyramid-retry = "^1.0"
pyramid-tm = "^2.4"
pyramid_translogger = "^0.1"
python-dateutil = "^2.8.2"
# python-magic is presently pinned to 0.4.15 in lockstep with dcicsnovault's requirements. See explanation there.
python_magic = ">=0.4.24,<1"
pytz = ">=2021.3"
rdflib = "^4.2.2"
rdflib-jsonld = ">=0.5.0,<1.0.0"
requests = "^2.26.0"
rsa = "3.3"
rutter = ">=0.3,<1"
semantic_version = ">=2.9.0"
# We don't use this directly. It's part of boto3. It slows down solving to pin.
# s3transfer = ">=0.3.7,<0.4.0"
sentry-sdk = "^1.5.6"
simplejson = "^3.17.0"
SPARQLWrapper = "^1.8.5"
SQLAlchemy = "1.4.41"  # latest stable version we can take - Will Jan 13 2023
structlog = ">=19.2.0,<20"
submit4dn = "0.9.7"
subprocess_middleware = ">=0.3,<1"
# Useful for picking apart pyproject.toml
toml = ">=0.10.1,<1"
transaction = "^3.0.0"
translationstring = "1.3"
uptime = ">=3.0.1,<4"
urllib3 = "^1.26.6"
venusian = "^1.2.0"
waitress = "^2.1.1"
WebOb = "^1.8.7"
WebTest = "^2.0.35"
WSGIProxy2 = "0.4.2"
xlrd = "^1.0.0"
xlwt = "1.2.0"
"zope.deprecation" = "4.4.0"
"zope.interface" = "^4.7.2"
"zope.sqlalchemy" = "1.6"
codeguru-profiler-agent = "^1.2.4"
supervisor = "^4.2.4"
wheel = "0.37.1"


[tool.poetry.dev-dependencies]
# PyCharm says boto3-stubs contains useful type hints
boto3-stubs = "^1.24.36"
botocore-stubs = "^1.27.36"
coverage = ">=6.2"
codacy-coverage = ">=1.3.11"
coveralls = ">=3.3.1"
docutils = ">=0.16,<1"
flake8 = ">=3.9.2"
flaky = ">=3.7.0"
# flask only for moto[server]
flask = ">=2.0.3"
lorem-text = "^2.1"
# Here AND ELSEWHERE (related scripts), we pin use of moto 1.3.7.
# I asked Will today why we're pinning that and he explained to me that above there (i.e., in version 1.3.8),
# an SQS-related bug is introduced, and that we cannot upgrade versions until this bug is fixed.
# His belief is that moto has not had a "true" release in months, so we will have to stick with this version.
# I searched the web and see this bug introduced in 1.3.8 and allegedly fixed. -kmp 29-Apr-2020
# https://github.com/spulec/moto/issues/2172
# Here's another report that might be related and it's not clear if this is fixed:
# https://gitmemory.com/issue/spulec/moto/2118/474917895
# TODO: Investigate whether this bug is fixed. If it is, update the version.
#       If not, get a reference to an open bug report here so we can check back periodically.
moto = "1.3.7"
pip-licenses = "^3.5.1"
pipdeptree = "^2.1.0"
pytest = "^7.2.1"
pytest-cov = ">=2.2.1"
pytest-instafail = ">=0.3.0"
pytest-mock = ">=0.11.0"
pytest-timeout = ">=1.0.0"
pytest-xdist = ">=1.14"
"repoze.debug" = ">=1.0.2"


# In pytest 6.0, we'll be able to use this instead of a separate pytest.ini configuration.
# -kmp 18-Jan-2021
#
# [tool.pytest.ini_options]
# minversion = "6.0"
# ...etc.
# See details at https://pytest.org/en/stable/customize.html

[tool.poetry.scripts]
# dcicutils commands
add-image-tag = "dcicutils.ecr_scripts:add_image_tag_main"
show-global-env-bucket = "dcicutils.env_scripts:show_global_env_bucket_main"
show-image-manifest = "dcicutils.ecr_scripts:show_image_manifest_main"
show-image-catalog = "dcicutils.ecr_scripts:show_image_catalog_main"
unrelease-most-recent-image = "dcicutils.ecr_scripts:unrelease_most_recent_image_main"
# snovault commands
batchupgrade = "snovault.batchupgrade:main"
create-mapping = "snovault.elasticsearch.create_mapping:main"
es-index-listener = "snovault.elasticsearch.es_index_listener:main"
wipe-test-indices = "snovault.commands.wipe_test_indices:main"
# encoded commands
add-date-created = "encoded.commands.add_date_created:main"
check-rendering = "encoded.commands.check_rendering:main"
clear-db-es-contents = "encoded.commands.clear_db_es_contents:main"
configure-kibana-index = "encoded.commands.configure_kibana_index:main"
create-mapping-on-deploy = "encoded.commands.create_mapping_on_deploy:main"
create-sample-ontology-from-ontology-file = "encoded.commands.create_sample_ontology_from_ontology_file:main"
dev-servers = "encoded.dev_servers:main"
dis2pheno = "encoded.commands.parse_hpoa:main"
es-index-data = "snovault.commands.es_index_data:main"
export-data = "encoded.commands.export_data:main"
extract-test-data = "encoded.commands.extract_test_data:main"
generate-ontology = "encoded.commands.generate_ontology:main"
import-data = "encoded.commands.import_data:main"
ingestion-listener = "encoded.ingestion_listener:main"
jsonld-rdf = "encoded.commands.jsonld_rdf:main"
load-access-keys = "encoded.commands.load_access_keys:main"
load-data = "encoded.commands.load_data:main"
load-items = "encoded.commands.load_items:main"
load-ontology-terms = "encoded.commands.load_ontology_terms:main"
migrate-attachments-aws = "encoded.commands.migrate_attachments_aws:main"
migrate-dataset-type = "encoded.commands.migrate_dataset_type:main"
migrate-files-aws = "encoded.commands.migrate_files_aws:main"
owl-to-items = "encoded.commands.generate_items_from_owl:main"
profile = "encoded.commands.profile:main"
# Will asks that there be some better doc for prepare-docker.
# https://hms-dbmi.atlassian.net/browse/C4-781
prepare-docker = "encoded.commands.prepare_template:prepare_docker_main"
prepare-local-dev = "encoded.commands.prepare_template:prepare_local_dev_main"
run-upgrade-on-inserts = "encoded.commands.run_upgrader_on_inserts:main"
spreadsheet-to-json = "encoded.commands.spreadsheet_to_json:main"
update-inserts-from-server = "encoded.commands.update_inserts_from_server:main"
verify-item = "encoded.commands.verify_item:main"

[paste.app_factory]
main = "encoded:main"

[paste.composite_factory]
indexer = "snovault.elasticsearch.es_index_listener:composite"
ingester = "encoded.ingestion_listener:composite"

[paste.filter_app_factory]
memlimit = "encoded.memlimit:filter_app"

[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
