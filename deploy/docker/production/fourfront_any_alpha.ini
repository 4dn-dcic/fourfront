[app:app]
use = config:base.ini#app
session.secret = %(here)s/session-secret.b64
auth0.client = ${AUTH0_CLIENT}
auth0.secret = ${AUTH0_SECRET}
file_upload_bucket = ${FILE_UPLOAD_BUCKET}
file_wfout_bucket = ${FILE_WFOUT_BUCKET}
blob_bucket = ${BLOB_BUCKET}
system_bucket = ${SYSTEM_BUCKET}
sentry_dsn = ${SENTRY_DSN}
identity = ${IDENTITY}
tibanna_output_bucket = ${TIBANNA_OUTPUT_BUCKET}
application_bucket_prefix = ${APPLICATION_BUCKET_PREFIX}
foursight_bucket_prefix = ${FOURSIGHT_BUCKET_PREFIX}
# blob_store_profile_name = encoded-4dn-files
accession_factory = encoded.server_defaults.enc_accession
elasticsearch.server = ${ES_SERVER}
snovault.app_version = ask-pip
env.name = ${BS_ENV}
mirror.env.name = ${BS_MIRROR_ENV}
encoded_version = ${PROJECT_VERSION}
eb_app_version = ${APP_VERSION}
snovault_version = ${SNOVAULT_VERSION}
utils_version = ${UTILS_VERSION}
mpindexer = false
indexer = ${INDEXER}
indexer.namespace = ${ES_NAMESPACE}
index_server = ${INDEX_SERVER}
elasticsearch.aws_auth = true
production = true
load_test_data = encoded.loadxl:load_${DATA_SET}_data
sqlalchemy.url = postgresql://${RDS_USERNAME}:${RDS_PASSWORD}@${RDS_HOSTNAME}:${RDS_PORT}/${RDS_DB_NAME}

[composite:indexer]
use = config:base.ini#indexer

[pipeline:main]
pipeline =
    config:base.ini#memlimit
    egg:PasteDeploy#prefix
    app

[pipeline:debug]
pipeline =
    egg:repoze.debug#pdbpm
    app
set pyramid.includes =
    pyramid_translogger

[server:main]
use = egg:waitress#main
host = 0.0.0.0
port = 6543
threads = 16

[loggers]
keys = root, encoded, encoded_listener

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = DEBUG
handlers = console

[logger_encoded]
level = DEBUG
handlers = console
qualname = encoded
propagate = 0

[logger_encoded_listener]
level = INFO
handlers = console
qualname = snovault.elasticsearch.es_index_listener
propagate = 0

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(message)s
