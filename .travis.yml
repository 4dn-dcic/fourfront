dist: trusty
language: python
sudo: true
if: tag IS blank
cache:
  directories:
  - eggs
  - .npm
  - ~/.npm
  - node_modules
  - /home/travis/.cypress/Cypress
addons:
  apt:
    packages:
    - bsdtar
    - build-essential
    - make
    - graphviz
    - nginx
env:
  global:
  - PGPORT=5433
  - BOTO_CONFIG=/bogus
  - PATH="/usr/share/elasticsearch/bin:/usr/lib/postgresql/11/bin:$PATH"
  - ELASTIC_BEANSTALK_LABEL=$TRAVIS_COMMIT
  - USER="4dn-dcic"
  - SNO_REPO="snovault"
matrix:
  include:
  - python: '3.6'
    env: NPM=Test
  - python: '3.6'
    env: UNIT=Test
notifications:
  slack:
    secure: DQyUTk6evwPpO0P5+OPhBSgl+fGEerOjBlBwQliXAkDaMKH3Cpi4cTQ3ETR/+3g6bGqPGK+QJ1R+6Ht+hJD7dNomyVIoQmvF0P5afJtpk/A3cDILe90t76ET9jc/iBjWeUFQdokFUJ7Gt1GGYtI6e5XcVu/Qc/xqCvFMtsBN6mnBFuvcQki+WkoIIPPawyhfryCNOLo5vvbi4SZ5dZI+M0MGq9HQjOyF1sdIgKuXhxjupmL+kVPVXAq9kiOANYFkwbNsP9j0BTYW5wFHpAztBqz3NT6EchgCdue8tgV4hC4rRFvM/bsA4qz/TJ5wRRLBRXtnNtPcyhAqTiU+wC6qWt++fjSEMGe4KYqtRRV1YuxQiTVHN84t77DILLNfMh/6uSs0KijwOT+Oazwd/UsN1zYOH93AM4FZ0h92yyb6j6JQ+DUk4WFel1Zr4kZzhtHSPGw+K4fxY0zIt1qpaDPXjtZHQ0+LwIIMtwMp5bBcwDn9d1ADnUhUAuuIN2hHaXrVy4vP2hIcd0LzezBqvc7JXimyd5yRgUeOCTrKGkAeSo8VA7XIj0ZmlpQRYKNTJP+gz4Y6C/RCxISnFDF/vcX+IsDdvreZXJMplE1Aqxf0uR6Zj8Sr8q+QWGKydv6ettlLZuqDuv0l/l/9qpzYfRqLSZcetGRVFHHcR9wuQiDyums=
before_install:
- ls -dal /usr/lib/postgresql/*/bin/postgres
- find /usr/lib/postgresql -name 'postgres' -print
- ps auxww | grep postgres
- sudo apt-get install -yq --no-install-suggests --no-install-recommends postgresql-common
- sudo service postgresql stop
- sudo apt install -yq --no-install-suggests --no-install-recommends postgresql-11 postgresql-client-11
- sudo service postgresql status
- sudo service postgresql start 11
- sudo service postgresql status
- python -c "import fcntl; fcntl.fcntl(1, fcntl.F_SETFL, 0)"
- echo $tibanna_deploy
- postgres --version
- initdb --version
- ls -dal /usr/lib/postgresql/*/bin/postgres
- find /usr/lib/postgresql -name 'postgres' -print
- ps auxww | grep postgres
- nvm install 10 || (echo "Retrying nvm install" && sleep 5 && nvm install 10)
- node --version
- npm config set python /usr/bin/python2.7
install:
# need to manually change the version of six used by Travis for some reason
- pip install --upgrade pip==19.0.3
- pip uninstall -y six
- pip install six==1.11.0
- pip install --upgrade pip==19.0.3
- pip install poetry
- pip install coveralls
- pip install codacy-coverage
- make build
before_script:
- configure-kibana-index --es-endpoint search-fourfront-builds-uhevxdzfcv7mkm5pj5svcri3aq.us-east-1.es.amazonaws.com:80
script:
- if test -n "$NPM"; then npm test; fi
- if test -n "$NPM"; then make travis-test-npm;
  fi
- if test -n "$UNIT"; then travis_wait 30 make travis-test-unit;
  fi
- if test -n "$CYPRESS"; then travis_wait 30 deploy/run_cypress_tests_on_travis.sh;
  fi
after_script:
- echo leader=$BUILD_LEADER status=$BUILD_AGGREGATE_STATUS
- if test -n "$UNIT"; then wipe-test-indices $TRAVIS_JOB_ID search-fourfront-builds-uhevxdzfcv7mkm5pj5svcri3aq.us-east-1.es.amazonaws.com:80; fi
after_success:
- coveralls
- ! "if test -n \"$NPM\"; then \n   cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js\n
  \  cat ./coverage/lcov.info | ./node_modules/.bin/codacy-coverage\n   rm -rf ./coverage\nfi\n"
- if test -n "$UNIT"; then python-codacy-coverage -r coverage.xml; fi
- python deploy/travis_after_all.py https://api.travis-ci.org
- export $(cat .to_export_back) >> /dev/null
- echo $TRAVIS_COMMIT_MESSAGE
- MSG_NO_WHITESPACE="$(echo -e "${TRAVIS_COMMIT_MSG}" | tr -d '[:space:]')"
- echo $MSG_NO_WHITESPACE
- echo $TRAVIS_PULL_REQUEST
- echo $TRAVIS_BRANCH
- echo $tibanna_deploy
after_failure:
- python deploy/travis_after_all.py https://api.travis-ci.org
- export $(cat .to_export_back) >> /dev/null
notification:
  slack:
    rooms:
      secure: YuLIoKULHxT7ZY9nKVme0pVELk1HBS/nPjYYu4Bs48lOgJVK2I/OyvV9HVx2g7raK6/s4T7wTXG0EmljcakmKY78wsSyhR79fAZcV7+p4SobEi7nGHuHXVq0sp21ZeYiFJvD/5ospHX0hMudSicaANT66X7EyLTMdG/NGu5it6TPjcJWhxERXXz6Zbizm6j/wv2a64R0mMUGFSe1aWrFZv5ft+GgfupM2TPwX0PxNl2DamaGowJriKuU+svqIP7LXGuzYBxf9sj08gf3/S0e1r2bzg/ik4clzM2Lp5mcU27nLWh6TUr3hthFNsaKAFwIPS6Ay1Z8GeotAiZC538fyeM1zDvjz0Uu5fEuZnI89NVZ734NZfoFCEg4JcPDs8RHgzreR209zRgCVUh8AI7m7vMv302MNAjbG42FPlB1gDg9bukxbyytccm5/TuzAGLktG1jCWJk0uU34JsWZakF9fSqmFckppXZ1472cPQT+ityuszyUGEMgLvNxpZDpwMhywN7eMuQu64YD4ex1EvbidNEIdb0Z5UnpXaC2H+vxdBb+Qg58r/HN/S6OW8H+C/pZMuRMdm1AcgOjS9hROcRKgmwSD53Z/XXrT4GYZTW48jNOCFE2O+6RXUGqvQzcH8JG5blnTxoCV8dtb9GDbORQm7b80MOiidG8Xi8Jyq8oPM=
