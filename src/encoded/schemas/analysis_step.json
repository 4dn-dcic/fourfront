{
    "title": "Analysis step",
    "description": "Schema for submitting a computational analysis steps as a part of a workflow.",
    "id": "/profiles/analysis_step.json",
    "$schema": "http://json-schema.org/draft-04/schema#",
    "type": "object",
    "required": ["name", "version"],
    "additionalProperties": false,
    "identifyingProperties": ["uuid", "aliases", "name"],
    "mixinProperties": [
        { "$ref": "mixins.json#/schema_version" },
        { "$ref": "mixins.json#/aliases" },
        { "$ref": "mixins.json#/uuid" },
        { "$ref": "mixins.json#/status" },
        { "$ref": "mixins.json#/submitted"},
        { "$ref": "mixins.json#/documents" },
        { "$ref": "mixins.json#/notes"}
    ],
    "properties": {
        "schema_version": {
            "default": "1"
        },
        "name": {
            "title": "Name",
            "description": "Unique name of the analysis step",
            "comment": "Unique for each parent analysis_step, using a naming system where the pipeline, software used, the purpose and the version of the step is described: rampage-grit-peak-calling-step-v-1",
            "type": "string",
            "pattern": "^[a-z0-9\\-\\_]+$",
            "uniqueKey": true
        },
        "title": {
            "title": "Title",
            "description": "The preferred viewable name of the analysis step, likely the same as the name.",
            "type": "string"
        },
        "version": {
            "titile": "Version",
            "description": "The version of the analysis step",
            "type": "integer",
            "default": 1
        },
        "description": {
            "title": "Description",
            "description": "A plain text description of the analysis step.",
            "type": "string"
        },
        "cwl_pointer": {
            "title": "CWL Path",
            "description": "Path to the CWL file for the analysis step - URL or directory path",
            "type": "string"
        },
        "analysis_step_types": {
            "title": "Types",
             "description": "The classification of the analysis step",
             "type": "array",
             "uniqueItems": true,
             "items": {
                 "title": "Type",
                 "type": "string",
                 "comment": "do we want loose or tight mapping to software types?",
                 "comment": "in many cases can derive specific descriptions by combining file type(s) and software type",
                 "comment": "Thinking we can make this a calculated property",
                 "comment": "But maybe not as we won't always have explicit input and/or output file types",
                 "enum": [
                   "alignment",
                   "aggregation",
                   "fastq concatenation",
                   "normalization",
                   "indexing",
                   "genome indexing",
                   "QC calculation",
                   "genome segmentation",
                   "filtering",
                   "file format conversion",
                   "peak calling",
                   "signal generation",
                   "quantification",
                   "open chromatin region identification",
                   "read trimming",
                   "interaction calling"
                 ]
             }
        },
        "software_used": {
            "title": "Software used",
            "description": "The software used in this step",
            "type": "array",
            "comment": "even though Soo suggested a single software and then use software_relation to group software",
            "comment": "I think leaving this an array gives us flexibility if someone doesn't dockerize their analysis step",
            "comment": "Or would it be better to enforce needing 'single' software per analysis step?",
            "items": {
                "title": "Software",
                "type": "string",
                "linkTo": "Software"
            }
        },
        "input_file_types": {
            "title": "Input file types",
            "description": "The file types used as input for the analysis.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Input file type",
                "description": "A file type used as input for the analysis.",
                "type": "string",
                "enum": [
                    "reads",
                    "read pairs",
                    "intensity values",
                    "alignments",
                    "unfiltered alignments",
                    "contact matrix",
                    "normalized contact matrix",
                    "long range chromatin interactions",
                    "peaks",
                    "genome reference",
                    "genome index",
                    "blacklisted regions"
                ]
            }
        },
        "output_file_types": {
            "title": "Output file types",
            "description": "The file types generated as output for the analysis.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "Output file type",
                "description": "A file type generated as output for the analysis.",
                "type": "string",
                "enum": [
                    "reads",
                    "read pairs",
                    "intensity values",
                    "alignments",
                    "unfiltered alignments",
                    "contact matrix",
                    "normalized contact matrix",
                    "long range chromatin interactions",
                    "peaks",
                    "genome reference",
                    "genome index",
                    "blacklisted regions"
                ]
            }
        },
        "step_parameters": {
            "title": "Analysis Step Parameters",
            "description": "The parameters that are used by the analysis step - not all of which are necessarily passed to listed software",
            "type": "array",
            "items": {
              "title": "Parameter",
              "type": {"$ref": "mixins.json#/parameter"}
            }
        },
        "qa_stats_generated": {
            "title": "QA statistics",
            "description": "The QA statistics generated by the analysis - document.",
            "type": "array",
            "uniqueItems": true,
            "items": {
                "title": "QA statistic",
                "description": "A QA statistic generated by the analysis.",
                "type": "string",
                "linkTo": "Document"
            }
        },
        "parents": {
            "title": "Parents",
            "description": "The precursor steps.",
            "comment": "Soo thought that this might not be the best way to 'order' the analysis steps in a workflow",
            "comment": "I'm leaving this like this for now and we need to figure out if and how we generate workflow graphs",
            "type": "array",
            "items": {
                "description": "A precusor step.",
                "comment": "See analysis_step.json for available identifiers.",
                "type": "string",
                "linkTo": "AnalysisStep"
            }
        }
    }
}
