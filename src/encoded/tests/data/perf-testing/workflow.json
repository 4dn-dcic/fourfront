[
    {
        "app_name": "hi-c-processing-bam", 
        "accession": "4DNWFT69RBY4", 
        "docker_image_name": "duplexa/4dn-hic:v42", 
        "aliases": [], 
        "category": "filter", 
        "submitted_by": "986b362f-4eb6-4a9c-8173-3ab267307e3a", 
        "uuid": "023bfb3e-9a8b-42b9-a9d4-216079526f68", 
        "title": "Hi-C Post-alignment Processing", 
        "schema_version": "4", 
        "cwl_directory_url_draft3": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.5/cwl_awsem/", 
        "arguments": [
            {
                "workflow_argument_name": "input_bams", 
                "argument_format": "bam", 
                "argument_type": "Input file"
            }, 
            {
                "workflow_argument_name": "chromsize", 
                "argument_format": "chromsizes", 
                "argument_type": "Input file"
            }, 
            {
                "workflow_argument_name": "nthreads_parse_sort", 
                "argument_type": "parameter"
            }, 
            {
                "workflow_argument_name": "nthreads_merge", 
                "argument_type": "parameter"
            }, 
            {
                "workflow_argument_name": "annotated_bam", 
                "argument_format": "bam", 
                "argument_type": "Output processed file"
            }, 
            {
                "secondary_file_formats": [
                    "pairs_px2"
                ], 
                "workflow_argument_name": "filtered_pairs", 
                "argument_format": "pairs", 
                "argument_type": "Output processed file"
            }
        ], 
        "public_release": "2018-02-14", 
        "status": "released", 
        "description": "This is a subworkflow of the Hi-C data processing pipeline. It takes a bam file as input and performs parsing, sorting, filtering and deduping. It produces two output files, a lossless, filter-annotated bam file and a filtered pairs (contact list) file.", 
        "award": "b0b9c607-f8b4-4f02-93f4-9895b461334b", 
        "cwl_directory_url_v1": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem_v1/", 
        "data_types": [
            "Hi-C"
        ], 
        "lab": "828cd4fe-ebb0-4b36-a94a-d2e3a36cc989", 
        "docker_registry_url": "https://hub.docker.com/", 
        "name": "hi-c-processing-bam", 
        "cwl_child_filenames": [
            "pairsam-parse-sort.cwl", 
            "pairsam-merge.cwl", 
            "pairsam-markasdup.cwl", 
            "pairsam-filter.cwl"
        ], 
        "workflow_type": "Hi-C data analysis", 
        "cwl_main_filename": "hi-c-processing-bam.cwl", 
        "steps": [
            {
                "inputs": [
                    {
                        "source": [
                            {
                                "name": "input_bams"
                            }
                        ], 
                        "meta": {
                            "global": true, 
                            "cardinality": "array", 
                            "type": "data file", 
                            "file_format": "bam"
                        }, 
                        "name": "bam"
                    }, 
                    {
                        "source": [
                            {
                                "name": "chromsize"
                            }
                        ], 
                        "meta": {
                            "global": true, 
                            "cardinality": "single", 
                            "type": "reference file", 
                            "file_format": "chromsize"
                        }, 
                        "name": "chromsize"
                    }, 
                    {
                        "source": [
                            {
                                "name": "nthreads_parse_sort"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "Threads"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "58ed98d7-10d8-4c51-8166-4a813c62ef8c"
                    ], 
                    "description": "Parsing and sorting bam file", 
                    "analysis_step_types": [
                        "annotation", 
                        "sorting"
                    ]
                }, 
                "name": "pairsam-parse-sort", 
                "outputs": [
                    {
                        "meta": {
                            "global": false, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "pairsam"
                        }, 
                        "target": [
                            {
                                "step": "pairsam-merge", 
                                "name": "input_pairsams"
                            }
                        ], 
                        "name": "sorted_pairsam"
                    }
                ]
            }, 
            {
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "pairsam-parse-sort", 
                                "name": "sorted_pairsam"
                            }
                        ], 
                        "meta": {
                            "global": false, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "pairsam"
                        }, 
                        "name": "input_pairsams"
                    }, 
                    {
                        "source": [
                            {
                                "name": "nthreads_merge"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "nThreads"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "58ed98d7-10d8-4c51-8166-4a813c62ef8c"
                    ], 
                    "description": "Merging pairsam files", 
                    "analysis_step_types": [
                        "merging"
                    ]
                }, 
                "name": "pairsam-merge", 
                "outputs": [
                    {
                        "meta": {
                            "global": false, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "pairsam"
                        }, 
                        "target": [
                            {
                                "step": "pairsam-markasdup", 
                                "name": "input_pairsam"
                            }
                        ], 
                        "name": "merged_pairsam"
                    }
                ]
            }, 
            {
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "pairsam-merge", 
                                "name": "merged_pairsam"
                            }
                        ], 
                        "meta": {
                            "global": false, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "pairsam"
                        }, 
                        "name": "input_pairsam"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "58ed98d7-10d8-4c51-8166-4a813c62ef8c"
                    ], 
                    "description": "Marking duplicates to pairsam file", 
                    "analysis_step_types": [
                        "filter"
                    ]
                }, 
                "name": "pairsam-markasdup", 
                "outputs": [
                    {
                        "meta": {
                            "global": false, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "pairsam"
                        }, 
                        "target": [
                            {
                                "step": "pairsam-filter", 
                                "name": "input_pairsam"
                            }
                        ], 
                        "name": "dupmarked_pairsam"
                    }
                ]
            }, 
            {
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "pairsam-markasdup", 
                                "name": "dupmarked_pairsam"
                            }
                        ], 
                        "meta": {
                            "global": false, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "pairsam"
                        }, 
                        "name": "input_pairsam"
                    }, 
                    {
                        "source": [
                            {
                                "name": "chromsize"
                            }
                        ], 
                        "meta": {
                            "global": true, 
                            "cardinality": "single", 
                            "type": "reference file", 
                            "file_format": "chromsize"
                        }, 
                        "name": "chromsize"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "58ed98d7-10d8-4c51-8166-4a813c62ef8c"
                    ], 
                    "description": "Filtering duplicate and invalid reads", 
                    "analysis_step_types": [
                        "filter", 
                        "file format conversion"
                    ]
                }, 
                "name": "pairsam-filter", 
                "outputs": [
                    {
                        "meta": {
                            "global": true, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "bam"
                        }, 
                        "target": [
                            {
                                "name": "annotated_bam"
                            }
                        ], 
                        "name": "lossless_bamfile"
                    }, 
                    {
                        "meta": {
                            "global": true, 
                            "cardinality": "single", 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "target": [
                            {
                                "name": "filtered_pairs"
                            }
                        ], 
                        "name": "filtered_pairs"
                    }
                ]
            }
        ], 
        "date_created": "2018-01-15T02:35:10.479650+00:00", 
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.5/cwl_awsem/"
    }, 
    {
        "app_name": "bwa-mem", 
        "cwl_pointer": "", 
        "accession": "4DNWF84NFOQP", 
        "docker_image_name": "duplexa/4dn-hic:v42", 
        "alternate_accessions": [], 
        "aliases": [], 
        "category": "alignment", 
        "submitted_by": "986b362f-4eb6-4a9c-8173-3ab267307e3a", 
        "documents": [], 
        "uuid": "3feedadc-50f9-4bb4-919b-09a8b731d0cc", 
        "title": "Alignment for Hi-C using bwa-mem", 
        "schema_version": "4", 
        "project_release": "2018-02-15", 
        "cwl_directory_url_draft3": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.5/cwl_awsem/", 
        "arguments": [
            {
                "workflow_argument_name": "fastq1", 
                "description": "", 
                "argument_format": "fastq", 
                "argument_type": "Input file"
            }, 
            {
                "workflow_argument_name": "fastq2", 
                "description": "", 
                "argument_format": "fastq", 
                "argument_type": "Input file"
            }, 
            {
                "workflow_argument_name": "bwa_index", 
                "description": "", 
                "argument_format": "bwaIndex", 
                "argument_type": "Input file"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "nThreads"
            }, 
            {
                "argument_type": "Output processed file", 
                "argument_format": "bam", 
                "workflow_argument_name": "out_bam"
            }
        ], 
        "public_release": "2018-05-01", 
        "app_version": "0.2.5", 
        "status": "released", 
        "description": "Creating a lossless alignment bam file from a pair of fastq files", 
        "award": "b0b9c607-f8b4-4f02-93f4-9895b461334b", 
        "cwl_directory_url_v1": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem_v1/", 
        "data_types": [
            "Hi-C"
        ], 
        "lab": "828cd4fe-ebb0-4b36-a94a-d2e3a36cc989", 
        "workflow_diagram": "", 
        "docker_registry_url": "https://hub.docker.com/", 
        "name": "bwa-mem", 
        "cwl_child_filenames": [], 
        "workflow_type": "Hi-C data analysis", 
        "cwl_main_filename": "bwa-mem.cwl", 
        "steps": [
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "bam"
                        }, 
                        "target": [
                            {
                                "name": "out_bam"
                            }
                        ], 
                        "name": "out_bam"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "42adeb1b-c46c-4ba8-b191-56036ddcd544"
                    ], 
                    "analysis_step_types": [
                        "alignment"
                    ]
                }, 
                "name": "bwa-mem", 
                "inputs": [
                    {
                        "source": [
                            {
                                "name": "fastq1"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "fastq"
                        }, 
                        "name": "fastq1"
                    }, 
                    {
                        "source": [
                            {
                                "name": "fastq2"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "fastq"
                        }, 
                        "name": "fastq2"
                    }, 
                    {
                        "source": [
                            {
                                "name": "bwa_index"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file", 
                            "file_format": "bwaIndex"
                        }, 
                        "name": "bwa_index"
                    }, 
                    {
                        "source": [
                            {
                                "name": "nThreads"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "nThreads"
                    }
                ]
            }
        ], 
        "date_created": "2017-12-19T14:58:33.981102+00:00", 
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.5/cwl_awsem/"
    }, 
    {
        "app_name": "fastqc-0-11-4-1", 
        "cwl_pointer": "https://igor.sbgenomics.com/raw/4dn-dcic/dev/fastqc-0-11-4/0", 
        "accession": "4DNWFAW5VTA5", 
        "docker_image_name": "duplexa/4dn-hic:v32", 
        "alternate_accessions": [], 
        "aliases": [], 
        "category": "QC", 
        "submitted_by": "986b362f-4eb6-4a9c-8173-3ab267307e3a", 
        "documents": [], 
        "uuid": "2324ad76-ff37-4157-8bcc-3ce72b7dace9", 
        "title": "FastQC", 
        "schema_version": "4", 
        "project_release": "2018-03-30", 
        "cwl_directory_url_draft3": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/", 
        "arguments": [
            {
                "argument_type": "Input file", 
                "workflow_argument_name": "limits_file"
            }, 
            {
                "argument_type": "Input file", 
                "argument_format": "fastq", 
                "workflow_argument_name": "input_fastq"
            }, 
            {
                "argument_type": "Input file", 
                "workflow_argument_name": "contaminants_file"
            }, 
            {
                "argument_type": "Input file", 
                "workflow_argument_name": "adapters_file"
            }, 
            {
                "argument_type": "Output QC file", 
                "workflow_argument_name": "report_zip"
            }
        ], 
        "public_release": "2018-06-12", 
        "app_version": "0.2.0", 
        "status": "released", 
        "description": "FastQC quality control step for fastq files", 
        "award": "b0b9c607-f8b4-4f02-93f4-9895b461334b", 
        "cwl_directory_url_v1": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem_v1/", 
        "data_types": [
            "Hi-C", 
            "Capture Hi-C", 
            "Repli-seq"
        ], 
        "lab": "828cd4fe-ebb0-4b36-a94a-d2e3a36cc989", 
        "workflow_diagram": "", 
        "docker_registry_url": "https://hub.docker.com/", 
        "name": "fastqc-0-11-4-1", 
        "cwl_child_filenames": [
            "fastqc-0-11-4.cwl"
        ], 
        "workflow_type": "Data QC", 
        "cwl_main_filename": "fastqc-0-11-4-1.cwl", 
        "steps": [
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "report", 
                            "file_format": "zip"
                        }, 
                        "target": [
                            {
                                "name": "report_zip"
                            }
                        ], 
                        "name": "report_zip"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "02d636b9-d82d-4da9-950c-2ca994a13131"
                    ], 
                    "description": "FastQC QC for fastq files", 
                    "analysis_step_types": [
                        "QC calculation"
                    ]
                }, 
                "name": "FastQC", 
                "inputs": [
                    {
                        "source": [
                            {
                                "name": "limits_file"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file"
                        }, 
                        "name": "limits_file"
                    }, 
                    {
                        "source": [
                            {
                                "name": "input_fastq"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "fastq"
                        }, 
                        "name": "input_fastq"
                    }, 
                    {
                        "source": [
                            {
                                "name": "contaminants_file"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file"
                        }, 
                        "name": "contaminants_file"
                    }, 
                    {
                        "source": [
                            {
                                "name": "adapters_file"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file"
                        }, 
                        "name": "adapters_file"
                    }
                ]
            }
        ], 
        "date_created": "2017-05-09T07:21:37.091916+00:00", 
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/"
    }, 
    {
        "app_name": "md5", 
        "accession": "4DNWFG6JOL4D", 
        "alternate_accessions": [], 
        "aliases": [], 
        "category": "QC", 
        "submitted_by": "986b362f-4eb6-4a9c-8173-3ab267307e3a", 
        "documents": [], 
        "uuid": "d3f25cd3-e726-4b3c-a022-48f844474b41", 
        "title": "md5", 
        "schema_version": "4", 
        "project_release": "2017-12-11", 
        "cwl_directory_url_draft3": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.0.4/cwl_awsem/", 
        "arguments": [
            {
                "workflow_argument_name": "input_file", 
                "description": "File on which MD5 calculation is run on.", 
                "argument_format": "fastq", 
                "argument_type": "Input file"
            }, 
            {
                "workflow_argument_name": "report", 
                "description": "The MD5 checksum generated.", 
                "argument_type": "Output report file"
            }
        ], 
        "public_release": "2018-06-12", 
        "app_version": "0.0.4", 
        "status": "released", 
        "description": "md5 on uncompressed file", 
        "award": "b0b9c607-f8b4-4f02-93f4-9895b461334b", 
        "data_types": [
            "Hi-C", 
            "Capture Hi-C", 
            "Repli-seq"
        ], 
        "lab": "828cd4fe-ebb0-4b36-a94a-d2e3a36cc989", 
        "workflow_diagram": "", 
        "name": "md5", 
        "cwl_child_filenames": [], 
        "workflow_type": "Data QC", 
        "cwl_main_filename": "md5.cwl", 
        "steps": [
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "QC", 
                            "description": "The MD5 checksum generated."
                        }, 
                        "target": [
                            {
                                "name": "report"
                            }
                        ], 
                        "name": "report"
                    }
                ], 
                "meta": {
                    "analysis_step_types": [
                        "QC calculation"
                    ]
                }, 
                "name": "md5", 
                "inputs": [
                    {
                        "source": [
                            {
                                "name": "input_file"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file", 
                            "description": "File on which MD5 calculation is run on.", 
                            "file_format": "fastq"
                        }, 
                        "name": "input_file"
                    }
                ]
            }
        ], 
        "date_created": "2017-05-09T07:21:37.200199+00:00", 
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.0.4/cwl_awsem/"
    }, 
    {
        "app_name": "pairsqc-single", 
        "accession": "4DNWFHB26CID", 
        "aliases": [], 
        "category": "QC", 
        "submitted_by": "986b362f-4eb6-4a9c-8173-3ab267307e3a", 
        "uuid": "b8c533e0-f8c0-4510-b4a1-ac35158e27c3", 
        "title": "PairsQC", 
        "schema_version": "4", 
        "cwl_directory_url_draft3": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem/", 
        "arguments": [
            {
                "secondary_file_formats": [
                    "pairs_px2"
                ], 
                "argument_type": "Input file", 
                "argument_format": "pairs", 
                "workflow_argument_name": "input_pairs"
            }, 
            {
                "argument_type": "Input file", 
                "argument_format": "chromsizes", 
                "workflow_argument_name": "chromsizes"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "enzyme"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "sample_name"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "max_distance"
            }, 
            {
                "argument_type": "Output QC file", 
                "workflow_argument_name": "report"
            }
        ], 
        "public_release": "2018-06-12", 
        "app_version": "0.2.6", 
        "status": "released", 
        "description": "PairsQC quality control step for pairs files", 
        "award": "b0b9c607-f8b4-4f02-93f4-9895b461334b", 
        "cwl_directory_url_v1": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem_v1/", 
        "data_types": [
            "Hi-C", 
            "Capture Hi-C"
        ], 
        "lab": "828cd4fe-ebb0-4b36-a94a-d2e3a36cc989", 
        "workflow_diagram": "", 
        "name": "pairsqc-single", 
        "cwl_child_filenames": [], 
        "workflow_type": "Data QC", 
        "cwl_main_filename": "pairsqc-single.cwl", 
        "steps": [
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "report"
                        }, 
                        "target": [
                            {
                                "name": "report"
                            }
                        ], 
                        "name": "report"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "15731f58-868f-44ab-b4ed-77b82ecd032b"
                    ], 
                    "description": "PairsQC QC for pairs files", 
                    "analysis_step_types": [
                        "QC calculation"
                    ]
                }, 
                "name": "PairsQC", 
                "inputs": [
                    {
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "name": "input_pairs"
                    }, 
                    {
                        "source": [
                            {
                                "name": "chromsizes"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file", 
                            "file_format": "chromsizes"
                        }, 
                        "name": "chromsizes"
                    }, 
                    {
                        "source": [
                            {
                                "name": "enzyme"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "enzyme"
                    }, 
                    {
                        "source": [
                            {
                                "name": "sample_name"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "sample_name"
                    }, 
                    {
                        "source": [
                            {
                                "name": "max_distance"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "max_distance"
                    }
                ]
            }
        ], 
        "date_created": "2018-06-12T19:48:39.614883+00:00", 
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem/"
    }, 
    {
        "app_name": "hi-c-processing-pairs", 
        "accession": "4DNWFTKI1QLK", 
        "docker_image_name": "duplexa/4dn-hic:v42", 
        "aliases": [], 
        "category": "merging + aggregation + normalization", 
        "submitted_by": "986b362f-4eb6-4a9c-8173-3ab267307e3a", 
        "uuid": "c9e0e6f7-b0ed-4a42-9466-cadc2dd84df0", 
        "title": "Generation of multiresolution Hi-C contact matrices from a set of contact lists", 
        "schema_version": "4", 
        "cwl_directory_url_draft3": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.5/cwl_awsem/", 
        "arguments": [
            {
                "argument_type": "Input file", 
                "argument_format": "pairs", 
                "workflow_argument_name": "input_pairs"
            }, 
            {
                "argument_type": "Input file", 
                "argument_format": "chromsize", 
                "workflow_argument_name": "chromsizes"
            }, 
            {
                "argument_type": "Input file", 
                "argument_format": "juicer_format_restriction_site_file", 
                "workflow_argument_name": "restriction_file"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "nthreads"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "min_res"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "maxmem"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "higlass"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "juicer_res"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "custom_res"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "nres"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "chunksize"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "mapqfilter_juicer"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "max_split_cooler"
            }, 
            {
                "argument_type": "parameter", 
                "workflow_argument_name": "nofrag"
            }, 
            {
                "secondary_file_formats": [
                    "pairs_px2"
                ], 
                "argument_type": "Output processed file", 
                "argument_format": "pairs", 
                "workflow_argument_name": "merged_pairs"
            }, 
            {
                "argument_type": "Output processed file", 
                "argument_format": "hic", 
                "workflow_argument_name": "hic"
            }, 
            {
                "argument_type": "Output processed file", 
                "argument_format": "mcool", 
                "workflow_argument_name": "mcool"
            }, 
            {
                "argument_type": "Output processed file", 
                "argument_format": "normvector_juicerformat", 
                "workflow_argument_name": "cooler_normvector"
            }
        ], 
        "public_release": "2018-02-14", 
        "app_version": "0.2.5", 
        "status": "released", 
        "description": "This is a subworkflow of the Hi-C data analysis pipeline. It takes pairs files for all replicates of a sample, merges them and then produces multi-resolution Hi-c matrices for visualization. The pipeline produces 4 output files. 1) Replicated merged pairs file 2) Contact matrices in .hic format 3) Multiresolution mcool file and 4) normalization vector of mcool files for visualization in juicebox.", 
        "award": "b0b9c607-f8b4-4f02-93f4-9895b461334b", 
        "cwl_directory_url_v1": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem_v1/", 
        "data_types": [
            "Hi-C"
        ], 
        "lab": "828cd4fe-ebb0-4b36-a94a-d2e3a36cc989", 
        "docker_registry_url": "https://hub.docker.com/", 
        "name": "hi-c-processing-pairs", 
        "cwl_child_filenames": [
            "merge-pairs.cwl", 
            "addfragtopairs.cwl", 
            "cooler.cwl", 
            "pairs2hic.cwl", 
            "cool2mcool.cwl", 
            "add-hic-normvector-to-mcool.cwl", 
            "extract-mcool-normvector-for-juicebox.cwl"
        ], 
        "workflow_type": "Hi-C data analysis", 
        "cwl_main_filename": "hi-c-processing-pairs.cwl", 
        "steps": [
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "target": [
                            {
                                "name": "merged_pairs"
                            }, 
                            {
                                "step": "addfragtopairs", 
                                "name": "input_pairs"
                            }, 
                            {
                                "step": "cooler", 
                                "name": "pairs"
                            }
                        ], 
                        "name": "merged_pairs"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "9baf9f73-2d59-4eca-a326-340007b2a8b8"
                    ], 
                    "description": "Merging pair files", 
                    "analysis_step_types": [
                        "merging"
                    ]
                }, 
                "name": "merge-pairs", 
                "inputs": [
                    {
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ], 
                        "meta": {
                            "cardinality": "array", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "name": "input_pairs"
                    }
                ]
            }, 
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "target": [
                            {
                                "step": "pairs2hic", 
                                "name": "input_pairs"
                            }
                        ], 
                        "name": "pairs_with_frags"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "9baf9f73-2d59-4eca-a326-340007b2a8b8"
                    ], 
                    "description": "Adding restriction enzyme site information to the pairs file", 
                    "analysis_step_types": [
                        "annotation"
                    ]
                }, 
                "name": "addfragtopairs", 
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "merge-pairs", 
                                "name": "merged_pairs"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "name": "input_pairs"
                    }, 
                    {
                        "source": [
                            {
                                "name": "restriction_file"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file", 
                            "file_format": "juicer_format_restriction_site_file"
                        }, 
                        "name": "restriction_file"
                    }, 
                    {
                        "source": [
                            {
                                "name": "nofrag"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "donothing"
                    }
                ]
            }, 
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "cool"
                        }, 
                        "target": [
                            {
                                "step": "cool2mcool", 
                                "name": "input_cool"
                            }
                        ], 
                        "name": "cool"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "b43e5d6d-f1a6-4713-9b48-8f5c060dad6c"
                    ], 
                    "description": "Merged Pairs file is processed using Cooler", 
                    "analysis_step_types": [
                        "aggregation"
                    ]
                }, 
                "name": "cooler", 
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "merge-pairs", 
                                "name": "merged_pairs"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "name": "pairs"
                    }, 
                    {
                        "source": [
                            {
                                "name": "chromsizes"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file", 
                            "file_format": "chromsizes"
                        }, 
                        "name": "chrsizes"
                    }, 
                    {
                        "source": [
                            {
                                "name": "min_res"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "binsize"
                    }, 
                    {
                        "source": [
                            {
                                "name": "nthreads"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "ncores"
                    }, 
                    {
                        "source": [
                            {
                                "name": "max_split_cooler"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "max_split"
                    }
                ]
            }, 
            {
                "outputs": [
                    {
                        "meta": {
                            "global": true
                        }, 
                        "target": [
                            {
                                "name": "hic"
                            }, 
                            {
                                "step": "add-hic-normvector-to-mcool", 
                                "name": "input_hic"
                            }
                        ], 
                        "name": "hic"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "b0c823f7-ca1e-44fb-b0f6-3eefb19eae46"
                    ], 
                    "description": "Merged Pairs file is processed using Juicebox", 
                    "analysis_step_types": [
                        "aggregation", 
                        "normalization"
                    ]
                }, 
                "name": "pairs2hic", 
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "addfragtopairs", 
                                "name": "pairs_with_frags"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "pairs"
                        }, 
                        "name": "input_pairs"
                    }, 
                    {
                        "source": [
                            {
                                "name": "chromsizes"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file", 
                            "file_format": "chromsizes"
                        }, 
                        "name": "chromsizes"
                    }, 
                    {
                        "source": [
                            {
                                "name": "min_res"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "min_res"
                    }, 
                    {
                        "source": [
                            {
                                "name": "higlass"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "higlass"
                    }, 
                    {
                        "source": [
                            {
                                "name": "custom_res"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "custom_res"
                    }, 
                    {
                        "source": [
                            {
                                "name": "maxmem"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "maxmem"
                    }, 
                    {
                        "source": [
                            {
                                "name": "mapqfilter_juicer"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "mapqfilter"
                    }
                ]
            }, 
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "mcool"
                        }, 
                        "target": [
                            {
                                "step": "add-hic-normvector-to-mcool", 
                                "name": "input_mcool"
                            }
                        ], 
                        "name": "mcool"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "b43e5d6d-f1a6-4713-9b48-8f5c060dad6c"
                    ], 
                    "description": "Cooler file is converted to mcool", 
                    "analysis_step_types": [
                        "aggregation", 
                        "normalization", 
                        "file format conversion"
                    ]
                }, 
                "name": "cool2mcool", 
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "cooler", 
                                "name": "cool"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "cool"
                        }, 
                        "name": "input_cool"
                    }, 
                    {
                        "source": [
                            {
                                "name": "nthreads"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "ncores"
                    }, 
                    {
                        "source": [
                            {
                                "name": "chunksize"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "chunksize"
                    }, 
                    {
                        "source": [
                            {
                                "name": "juicer_res"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "juicer_res"
                    }, 
                    {
                        "source": [
                            {
                                "name": "custom_res"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "custom_res"
                    }
                ]
            }, 
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "mcool"
                        }, 
                        "target": [
                            {
                                "name": "mcool"
                            }, 
                            {
                                "step": "extract-mcool-normvector-for-juicebox", 
                                "name": "mcool"
                            }
                        ], 
                        "name": "mcool_with_hicnorm"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "c1c772a8-5d1c-4481-8ab7-30729f3f6cb2"
                    ], 
                    "description": "HiC normalization vector is added to mcooler", 
                    "analysis_step_types": [
                        "file format conversion"
                    ]
                }, 
                "name": "add-hic-normvector-to-mcool", 
                "inputs": [
                    {
                        "source": [
                            {
                                "step": "cool2mcool", 
                                "name": "mcool"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "mcool"
                        }, 
                        "name": "input_mcool"
                    }, 
                    {
                        "source": [
                            {
                                "step": "pairs2hic", 
                                "name": "hic"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "hic"
                        }, 
                        "name": "input_hic"
                    }
                ]
            }, 
            {
                "outputs": [
                    {
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "data file", 
                            "file_format": "normvector_juicerformat"
                        }, 
                        "target": [
                            {
                                "name": "cooler_normvector"
                            }
                        ], 
                        "name": "cooler_normvector"
                    }
                ], 
                "meta": {
                    "software_used": [
                        "f3907ef2-a9fe-4324-bc54-253a4cd53e3c"
                    ], 
                    "description": "Extracting HiC normalization vector", 
                    "analysis_step_types": [
                        "file format conversion"
                    ]
                }, 
                "name": "extract-mcool-normvector-for-juicebox", 
                "inputs": [
                    {
                        "source": [
                            {
                                "name": "custom_res"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "parameter"
                        }, 
                        "name": "custom_res"
                    }, 
                    {
                        "source": [
                            {
                                "name": "chromsizes"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": true, 
                            "type": "reference file", 
                            "file_format": "chromsizes"
                        }, 
                        "name": "chromsize"
                    }, 
                    {
                        "source": [
                            {
                                "step": "add-hic-normvector-to-mcool", 
                                "name": "mcool_with_hicnorm"
                            }
                        ], 
                        "meta": {
                            "cardinality": "single", 
                            "global": false, 
                            "type": "data file", 
                            "file_format": "mcool"
                        }, 
                        "name": "mcool"
                    }
                ]
            }
        ], 
        "date_created": "2018-02-09T15:25:21.781673+00:00", 
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.5/cwl_awsem/"
    }
]