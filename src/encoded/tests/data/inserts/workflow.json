[
    {
        "arguments": [
            {
                "argument_type": "Input file",
                "workflow_argument_name": "input_fastq2"
            },
            {
                "argument_type": "Input file",
                "workflow_argument_name": "input_fastq1"
            },
            {
                "argument_type": "Input file",
                "workflow_argument_name": "bowtie_index"
            },
            {
                "argument_type": "Input file",
                "workflow_argument_name": "RE_bed"
            },
            {
                "argument_type": "Input file",
                "workflow_argument_name": "chrlen_file"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "contact_matrix_binsize"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "chromosome"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "sorted_bam_pe"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "HiC_project_object_hdf5"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "HiC_distance_function_hdf5"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "normalized_fend_contact_matrix"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "normalized_enrich_contact_matrix"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "expected_enrich_contact_matrix"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "observed_contact_matrix"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "expected_fend_contact_matrix"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "HiC_norm_binning_hdf5"
            },
            {
                "argument_type": "Output processed file",
                "workflow_argument_name": "HiC_data_object_hdf5"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "alignment + filtering + matrix generation",
        "cwl_pointer": "https://igor.sbgenomics.com/raw/4dn-dcic/dev/gitar-v0-2/0",
        "data_types": [
            "Hi-C"
        ],
        "description": "GITAR Hi-C data processing pipeline",
        "lab": "4dn-dcic-lab",
        "name": "gitar",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_fastq2",
                        "source": [
                            {
                                "name": "input_fastq2"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_fastq1",
                        "source": [
                            {
                                "name": "input_fastq1"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bowtie_index",
                        "source": [
                            {
                                "name": "bowtie_index"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "description": "Alignment according to the GITAR pipeline",
                    "software_used": [
                        "/softwares/7868f960-50ac-11e4-916c-0800200c9a66/"
                    ]
                },
                "name": "hictool_fastq2bam",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "sorted_bam_pe",
                        "target": [
                            {
                                "name": "sorted_bam_pe"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "split_bam2",
                        "target": [
                            {
                                "name": "input_bam2",
                                "step": "hictool_bam2hdf5"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "split_bam1",
                        "target": [
                            {
                                "name": "input_bam1",
                                "step": "hictool_bam2hdf5"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bed",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "RE_bed",
                        "source": [
                            {
                                "name": "RE_bed"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "split_bam2",
                        "source": [
                            {
                                "name": "split_bam2",
                                "step": "hictool_fastq2bam"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "split_bam1",
                        "source": [
                            {
                                "name": "split_bam1",
                                "step": "hictool_fastq2bam"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "description": "Converting bam to hdf5 according to the GITAR pipeline",
                    "software_used": [
                        "/softwares/7868f960-50ac-11e4-916c-0800200c9a66/"
                    ]
                },
                "name": "hictool_bam2hdf5",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "HiC_project_object_hdf5",
                        "target": [
                            {
                                "name": "HiC_project_object_hdf5"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "HiC_distance_function_hdf5",
                        "target": [
                            {
                                "name": "HiC_distance_function_hdf5"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fend_object_hdf5",
                        "target": [
                            {
                                "name": "fend_object_hdf5",
                                "step": "hictool_hdf52matrix"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "HiC_norm_binning_hdf5",
                        "target": [
                            {
                                "name": "HiC_norm_binning_hdf5",
                                "step": "hictool_hdf52matrix"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "HiC_data_object_hdf5",
                        "target": [
                            {
                                "name": "HiC_data_object_hdf5",
                                "step": "hictool_hdf52matrix"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chrlen_file",
                        "source": [
                            {
                                "name": "chrlen_file"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "matrix",
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "contact_matrix_binsize",
                        "source": [
                            {
                                "name": "contact_matrix_binsize"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "chromosome",
                        "source": [
                            {
                                "name": "chromosome"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fend_object_hdf5",
                        "source": [
                            {
                                "name": "fend_object_hdf5",
                                "step": "hictool_bam2hdf5"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "HiC_norm_binning_hdf5",
                        "source": [
                            {
                                "name": "HiC_norm_binning_hdf5",
                                "step": "hictool_bam2hdf5"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "hdf5",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "HiC_data_object_hdf5",
                        "source": [
                            {
                                "name": "HiC_data_object_hdf5",
                                "step": "hictool_bam2hdf5"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "normalization"
                    ],
                    "description": "Contact (unnormalized and normalized) matrix creation according to the GITAR pipeline",
                    "software_used": [
                        "/softwares/7868f960-50ac-11e4-916c-0800200c9a66/"
                    ]
                },
                "name": "hictool_hdf52matrix",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "matrix",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "normalized_fend_contact_matrix",
                        "target": [
                            {
                                "name": "normalized_fend_contact_matrix"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "matrix",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "normalized_enrich_contact_matrix",
                        "target": [
                            {
                                "name": "normalized_enrich_contact_matrix"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "matrix",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "expected_enrich_contact_matrix",
                        "target": [
                            {
                                "name": "expected_enrich_contact_matrix"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "matrix",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "observed_contact_matrix",
                        "target": [
                            {
                                "name": "observed_contact_matrix"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "matrix",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "expected_fend_contact_matrix",
                        "target": [
                            {
                                "name": "expected_fend_contact_matrix"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "GITAR",
        "uuid": "c7a60edf-49e5-4c33-afab-9ec90d65faf3",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFAW5VTA5",
        "app_name": "fastqc-0-11-4-1",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_type": "Input file",
                "workflow_argument_name": "limits_file"
            },
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "workflow_argument_name": "input_fastq"
            },
            {
                "argument_type": "Input file",
                "workflow_argument_name": "contaminants_file"
            },
            {
                "argument_type": "Input file",
                "workflow_argument_name": "adapters_file"
            },
            {
                "argument_type": "Output QC file",
                "workflow_argument_name": "report_zip"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "QC",
        "cwl_child_filenames": [
            "fastqc-0-11-4.cwl"
        ],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "fastqc-0-11-4-1.cwl",
        "cwl_pointer": "https://igor.sbgenomics.com/raw/4dn-dcic/dev/fastqc-0-11-4/0",
        "data_types": [
            "Hi-C",
            "Capture Hi-C",
            "Repli-seq"
        ],
        "description": "FastQC quality control step for fastq files",
        "lab": "4dn-dcic-lab",
        "name": "fastqc-0-11-4-1",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "limits_file",
                        "source": [
                            {
                                "name": "limits_file"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_fastq",
                        "source": [
                            {
                                "name": "input_fastq"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "contaminants_file",
                        "source": [
                            {
                                "name": "contaminants_file"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "adapters_file",
                        "source": [
                            {
                                "name": "adapters_file"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "QC calculation"
                    ],
                    "description": "FastQC QC for fastq files",
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a13131/"
                    ]
                },
                "name": "FastQC",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "zip",
                            "global": true,
                            "type": "report",
                            "cardinality": "single"
                        },
                        "name": "report_zip",
                        "target": [
                            {
                                "name": "report_zip"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "FastQC",
        "uuid": "2324ad76-ff37-4157-8bcc-3ce72b7dace9",
        "workflow_diagram": "",
        "workflow_type": "Data QC"
    },
    {
        "accession": "4DNWF36CF3A1",
        "app_name": "pairsqc-single",
        "app_version": "dev",
        "arguments": [
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs"
            },
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chromsizes"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "enzyme"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "sample_name"
            },
            {
                "argument_type": "Output QC file",
                "workflow_argument_name": "report"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "QC",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem/",
        "cwl_main_filename": "pairsqc-single.cwl",
        "cwl_pointer": "https://igor.sbgenomics.com/raw/4dn-dcic/dev/pairsqc-0-11-4/0",
        "data_types": [
            "Hi-C",
            "Capture Hi-C"
        ],
        "description": "PairsQC quality control step for pairs files",
        "lab": "4dn-dcic-lab",
        "name": "pairsqc-single",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chromsizes",
                        "source": [
                            {
                                "name": "chromsizes"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "enzyme",
                        "source": [
                            {
                                "name": "enzyme"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "sample_name",
                        "source": [
                            {
                                "name": "sample_name"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "QC calculation"
                    ],
                    "description": "PairsQC QC for pairs files",
                    "software_used": [
                        "/softwares/15731f58-868f-44ab-b4ed-77b82ecd032b/"
                    ]
                },
                "name": "PairsQC",
                "outputs": [
                    {
                        "meta": {
                            "global": true,
                            "type": "report",
                            "cardinality": "single"
                        },
                        "name": "report",
                        "target": [
                            {
                                "name": "report"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "PairsQC",
        "uuid": "ae3a87cb-3fa2-469e-97c7-540fc2d0a117",
        "workflow_diagram": "",
        "workflow_type": "Data QC"
    },
    {
        "accession": "4DNWF6DUSPTF",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "The file(s) input into this Workflow.",
                "workflow_argument_name": "input_file"
            },
            {
                "argument_type": "Output report file",
                "description": "The file(s) output of this Workflow.",
                "workflow_argument_name": "report"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "QC",
        "data_types": [
            "Hi-C",
            "Capture Hi-C",
            "Repli-seq"
        ],
        "description": "ValidateFiles quality control step for fastq files",
        "lab": "4dn-dcic-lab",
        "name": "validate",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "description": "The file(s) input into this Workflow.",
                            "file_format": "fastq",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "input_file",
                        "source": [
                            {
                                "name": "input_file"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "QC calculation"
                    ]
                },
                "name": "validatefiles",
                "outputs": [
                    {
                        "meta": {
                            "description": "The file(s) output of this Workflow.",
                            "global": true,
                            "type": "QC",
                            "cardinality": "single"
                        },
                        "name": "report",
                        "target": [
                            {
                                "name": "report"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "ValidateFiles",
        "uuid": "181b777a-2db7-4593-ae7f-6170a5d69ff7",
        "workflow_diagram": "",
        "workflow_type": "Data QC"
    },
    {
        "accession": "4DNWFG6JOL4D",
        "app_name": "md5",
        "app_version": "0.0.4",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "File on which MD5 calculation is run on.",
                "workflow_argument_name": "input_file"
            },
            {
                "argument_type": "Output report file",
                "description": "The MD5 checksum generated.",
                "workflow_argument_name": "report"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "QC",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.0.4/cwl_awsem/",
        "cwl_main_filename": "md5.cwl",
        "data_types": [
            "Hi-C",
            "Capture Hi-C",
            "Repli-seq"
        ],
        "description": "md5 on uncompressed file",
        "lab": "4dn-dcic-lab",
        "name": "md5",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "description": "File on which MD5 calculation is run on.",
                            "file_format": "fastq",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "input_file",
                        "source": [
                            {
                                "name": "input_file"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "QC calculation"
                    ]
                },
                "name": "md5",
                "outputs": [
                    {
                        "meta": {
                            "description": "The MD5 checksum generated.",
                            "global": true,
                            "type": "QC",
                            "cardinality": "single"
                        },
                        "name": "report",
                        "target": [
                            {
                                "name": "report"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "md5",
        "uuid": "d3f25cd3-e726-4b3c-a022-48f844474b41",
        "workflow_diagram": "",
        "workflow_type": "Data QC"
    },
    {
        "accession": "4DNWFSOZLMGE",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq1"
            },
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq2"
            },
            {
                "argument_format": "bwaIndex",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "bwa_index"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nThreads"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_sorted_bam"
            },
            {
                "argument_format": "bai",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_sorted_bam_index"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_pairs"
            },
            {
                "argument_format": "pairs_px2",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_pairs_index"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "alignment + format conversion",
        "cwl_pointer": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/master/cwl_sbg/hi-c-processing-parta.9.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Creating a bam and pairs files from a pair of fastq files",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-parta",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq1",
                        "source": [
                            {
                                "name": "fastq1"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq2",
                        "source": [
                            {
                                "name": "fastq2"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bwaIndex",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bwa_index",
                        "source": [
                            {
                                "name": "bwa_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nThreads"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a13209/"
                    ]
                },
                "name": "bwa-mem",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_bam",
                        "target": [
                            {
                                "name": "input_bam",
                                "step": "sort_bam"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_bam",
                        "source": [
                            {
                                "name": "out_bam",
                                "step": "bwa-mem"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a06735/"
                    ]
                },
                "name": "sort_bam",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_sorted_bam",
                        "target": [
                            {
                                "name": "input_bam",
                                "step": "bam2pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bai",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_sorted_bam_index",
                        "target": [
                            {
                                "name": "out_sorted_bam_index"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_sorted_bam",
                        "source": [
                            {
                                "name": "out_sorted_bam",
                                "step": "sort_bam"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "bam2pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs",
                        "target": [
                            {
                                "name": "out_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs_index",
                        "target": [
                            {
                                "name": "out_pairs_index"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Hi-C processing part A",
        "uuid": "02d636b9-d82d-4da9-950c-2ca994a0943e",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFSOZLMGT",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq1"
            },
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq2"
            },
            {
                "argument_format": "bwaIndex",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "bwa_index"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nThreads"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_sorted_bam"
            },
            {
                "argument_format": "bai",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_sorted_bam_index"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_pairs"
            },
            {
                "argument_format": "pairs_px2",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "out_pairs_index"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "alignment + format conversion",
        "cwl_pointer": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/master/cwl_sbg/hi-c-processing-parta.9.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Creating a bam and pairs files from a pair of fastq files",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-parta/9",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq1",
                        "source": [
                            {
                                "name": "fastq1"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq2",
                        "source": [
                            {
                                "name": "fastq2"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bwaIndex",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bwa_index",
                        "source": [
                            {
                                "name": "bwa_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nThreads"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a13209/"
                    ]
                },
                "name": "bwa-mem",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_bam",
                        "target": [
                            {
                                "name": "input_bam",
                                "step": "sort_bam"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_bam",
                        "source": [
                            {
                                "name": "out_bam",
                                "step": "bwa-mem"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a06735/"
                    ]
                },
                "name": "sort_bam",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_sorted_bam",
                        "target": [
                            {
                                "name": "input_bam",
                                "step": "bam2pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bai",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_sorted_bam_index",
                        "target": [
                            {
                                "name": "out_sorted_bam_index"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_sorted_bam",
                        "source": [
                            {
                                "name": "out_sorted_bam",
                                "step": "sort_bam"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "bam2pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs",
                        "target": [
                            {
                                "name": "out_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs_index",
                        "target": [
                            {
                                "name": "out_pairs_index"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Hi-C processing part A revision 9",
        "uuid": "02d636b9-d82d-4da9-950c-2ca994a09411",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "arguments": [
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chrsizes"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs_index"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "ncores"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "binsize"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "min_res"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "normalization_type"
            },
            {
                "argument_format": "pairs_px2",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_pairs_index"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_pairs"
            },
            {
                "argument_format": "cool",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_cool"
            },
            {
                "argument_format": "hic",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_hic"
            },
            {
                "argument_format": "mcool",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_mcool"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "merging + matrix generation",
        "cwl_pointer": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/master/cwl_sbg/hi-c-processing-partb.15.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Hi-C processing part B revision 15",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-partb/15",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "cardinality": "array",
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs_index",
                        "source": [
                            {
                                "name": "input_pairs_index"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file merging"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "merge_pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_pairs_index",
                        "target": [
                            {
                                "name": "output_pairs_index"
                            },
                            {
                                "name": "pairs_index",
                                "step": "cooler"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_pairs",
                        "target": [
                            {
                                "name": "output_pairs"
                            },
                            {
                                "name": "input_pairs",
                                "step": "pairs2hic"
                            },
                            {
                                "name": "pairs",
                                "step": "cooler"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "ncores",
                        "source": [
                            {
                                "name": "ncores"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "binsize",
                        "source": [
                            {
                                "name": "binsize"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "pairs_index",
                        "source": [
                            {
                                "name": "output_pairs_index",
                                "step": "merge_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "pairs",
                        "source": [
                            {
                                "name": "output_pairs",
                                "step": "merge_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "aggregation"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23555/"
                    ]
                },
                "name": "cooler",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "cool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_cool",
                        "target": [
                            {
                                "name": "out_cool"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chrsizes",
                        "source": [
                            {
                                "name": "chrsizes"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "min_res",
                        "source": [
                            {
                                "name": "min_res"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "output_pairs",
                                "step": "merge_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "aggregation",
                        "normalization"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23576/"
                    ]
                },
                "name": "pairs2hic",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "hic",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_hic",
                        "target": [
                            {
                                "name": "output_hic"
                            },
                            {
                                "name": "input_hic",
                                "step": "hic2mcool"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "normalization_type",
                        "source": [
                            {
                                "name": "normalization_type"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_hic",
                        "source": [
                            {
                                "name": "output_hic",
                                "step": "pairs2hic"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23555/"
                    ]
                },
                "name": "hic2mcool",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "mcool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_mcool",
                        "target": [
                            {
                                "name": "out_mcool"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Hi-C processing part B revision 15",
        "uuid": "b9829418-49e5-4c33-afab-9ec90d65faf3",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFSOZLJGI",
        "arguments": [
            {
                "argument_format": "pairs_px2",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "input_pairs_index"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "input_pairs"
            },
            {
                "argument_type": "parameter",
                "description": "",
                "workflow_argument_name": "outprefix"
            },
            {
                "argument_format": "pairs_px2",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "output_pairs_index"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "output_pairs"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "merging + matrix generation",
        "cwl_pointer": "https://github.com/4dn-dcic/pipelines-cwl/blob/master/cwl_sbg/hi-c-processing-partb.6.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Hi-C processing part B revision 6",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-partb/6",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs_index",
                        "source": [
                            {
                                "name": "input_pairs_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "cardinality": "array",
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "outprefix",
                        "source": [
                            {
                                "name": "outprefix"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file merging"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "merge_pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_pairs_index",
                        "target": [
                            {
                                "name": "output_pairs_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_pairs",
                        "target": [
                            {
                                "name": "output_pairs"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Hi-C processing part B revision 6",
        "uuid": "a217d61c-49e5-4c33-afab-9ec90d65faf3",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFSOZLJBM",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "workflow_argument_name": "fastq1"
            },
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "workflow_argument_name": "fastq2"
            },
            {
                "argument_format": "bwaIndex",
                "argument_type": "Input file",
                "workflow_argument_name": "bwa_index"
            },
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chrsizes"
            },
            {
                "argument_format": "reference_fasta",
                "argument_type": "Input file",
                "workflow_argument_name": "reference_fasta"
            },
            {
                "argument_format": "juicer_format_restriction_site_file",
                "argument_type": "Input file",
                "workflow_argument_name": "restriction_file"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nsplit"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_pairs"
            },
            {
                "argument_format": "pairs_px2",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_pairs_index"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "alignment + filtering",
        "cwl_pointer": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/master/cwl_sbg/hi-c-processing-parta-juicer.5.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Hi-C processing partA based on Juicer",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-parta-juicer/5",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq1",
                        "source": [
                            {
                                "name": "fastq1"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq2",
                        "source": [
                            {
                                "name": "fastq2"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bwaIndex",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bwa_index",
                        "source": [
                            {
                                "name": "bwa_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "reference_fasta",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "reference_fasta",
                        "source": [
                            {
                                "name": "reference_fasta"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "juicer_format_restriction_site_file",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "restriction_file",
                        "source": [
                            {
                                "name": "restriction_file"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment",
                        "filtering"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23548/"
                    ]
                },
                "name": "juicer",
                "outputs": [
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "merged_nodups",
                        "target": [
                            {
                                "name": "input_merged_nodups",
                                "step": "juicer2pairs"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chrsizes",
                        "source": [
                            {
                                "name": "chrsizes"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nsplit",
                        "source": [
                            {
                                "name": "nsplit"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_merged_nodups",
                        "source": [
                            {
                                "name": "merged_nodups",
                                "step": "juicer"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "juicer2pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs",
                        "target": [
                            {
                                "name": "out_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs_index",
                        "target": [
                            {
                                "name": "out_pairs_index"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "hi-c-processing-parta-juicer",
        "uuid": "a9caf6f3-49e5-4c33-afab-9ec90d65faf3",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFSOBBBBB",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "workflow_argument_name": "fastq1"
            },
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "workflow_argument_name": "fastq2"
            },
            {
                "argument_format": "bwaIndex",
                "argument_type": "Input file",
                "workflow_argument_name": "bwa_index"
            },
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chrsizes"
            },
            {
                "argument_format": "reference_fasta",
                "argument_type": "Input file",
                "workflow_argument_name": "reference_fasta"
            },
            {
                "argument_format": "juicer_format_restriction_site_file",
                "argument_type": "Input file",
                "workflow_argument_name": "restriction_file"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nsplit"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "ncores"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_pairs"
            },
            {
                "argument_format": "pairs_px2",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_pairs_index"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "alignment + filtering",
        "cwl_pointer": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/master/cwl_sbg/hi-c-processing-parta-juicer.16.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Hi-C processing partA based on Juicer",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-parta-juicer/16",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq1",
                        "source": [
                            {
                                "name": "fastq1"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq2",
                        "source": [
                            {
                                "name": "fastq2"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bwaIndex",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bwa_index",
                        "source": [
                            {
                                "name": "bwa_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "reference_fasta",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "reference_fasta",
                        "source": [
                            {
                                "name": "reference_fasta"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "juicer_format_restriction_site_file",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "restriction_file",
                        "source": [
                            {
                                "name": "restriction_file"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "ncores",
                        "source": [
                            {
                                "name": "ncores"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment",
                        "filtering"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23599/"
                    ]
                },
                "name": "juicer",
                "outputs": [
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "merged_nodups",
                        "target": [
                            {
                                "name": "input_merged_nodups",
                                "step": "juicer2pairs"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chrsizes",
                        "source": [
                            {
                                "name": "chrsizes"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nsplit",
                        "source": [
                            {
                                "name": "nsplit"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_merged_nodups",
                        "source": [
                            {
                                "name": "merged_nodups",
                                "step": "juicer"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "juicer2pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs",
                        "target": [
                            {
                                "name": "out_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs_index",
                        "target": [
                            {
                                "name": "out_pairs_index"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "hi-c-processing-parta-juicer",
        "uuid": "a9caf6f3-49e5-4c33-bfab-9ec90d65111c",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFSOZLMMB",
        "arguments": [
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chrsizes"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs_index"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "ncores"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "binsize"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "min_res"
            },
            {
                "argument_format": "pairs_px2",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_pairs_index"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_pairs"
            },
            {
                "argument_format": "cool",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_cool"
            },
            {
                "argument_format": "hic",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_hic"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "merging + matrix generation",
        "cwl_pointer": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/master/cwl_sbg/hi-c-processing-partb.24.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Hi-C processing part B revision 24",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-partb/24",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "cardinality": "array",
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs_index",
                        "source": [
                            {
                                "name": "input_pairs_index"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file merging"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "merge_pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs_px2",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_pairs_index",
                        "target": [
                            {
                                "name": "output_pairs_index"
                            },
                            {
                                "name": "pairs_index",
                                "step": "cooler"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_pairs",
                        "target": [
                            {
                                "name": "output_pairs"
                            },
                            {
                                "name": "pairs",
                                "step": "cooler"
                            },
                            {
                                "name": "input_pairs",
                                "step": "pairs2hic"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chrsizes",
                        "source": [
                            {
                                "name": "chrsizes"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "min_res",
                        "source": [
                            {
                                "name": "min_res"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "output_pairs",
                                "step": "merge_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "aggregation",
                        "normalization"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23576/"
                    ]
                },
                "name": "pairs2hic",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "hic",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_hic",
                        "target": [
                            {
                                "name": "output_hic"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "ncores",
                        "source": [
                            {
                                "name": "ncores"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "binsize",
                        "source": [
                            {
                                "name": "binsize"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "pairs",
                        "source": [
                            {
                                "name": "output_pairs",
                                "step": "merge_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "pairs_index",
                        "source": [
                            {
                                "name": "output_pairs_index",
                                "step": "merge_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "aggregation"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23555/"
                    ]
                },
                "name": "cooler",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "cool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_cool",
                        "target": [
                            {
                                "name": "out_cool"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Hi-C processing part B revision 24",
        "uuid": "b9829418-49e5-4c33-afab-9ec90d659999",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFP00U73B",
        "app_name": "hi-c-processing-partb",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chrsizes"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "ncores"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "binsize"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "min_res"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "secondary_file_formats": [
                    "pairs_px2"
                ],
                "workflow_argument_name": "output_pairs"
            },
            {
                "argument_format": "cool",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_cool"
            },
            {
                "argument_format": "hic",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_hic"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "merging + matrix generation",
        "cwl_child_filenames": [
            "merge-pairs.cwl",
            "pairs2hic.cwl",
            "cooler.cwl"
        ],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "hi-c-processing-partb.cwl",
        "cwl_pointer": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.0.4/cwl_sbg/hi-c-processing-partb.44.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "Hi-C processing part B revision 44",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-partb/44",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "cardinality": "array",
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file merging"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a23547/"
                    ]
                },
                "name": "merge_pairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "secondary_file_formats": [
                                "pairs_px2"
                            ],
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_pairs",
                        "target": [
                            {
                                "name": "output_pairs"
                            },
                            {
                                "name": "pairs",
                                "step": "cooler"
                            },
                            {
                                "name": "input_pairs",
                                "step": "pairs2hic"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chrsizes",
                        "source": [
                            {
                                "name": "chrsizes"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "min_res",
                        "source": [
                            {
                                "name": "min_res"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "output_pairs",
                                "step": "merge_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "aggregation",
                        "normalization"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23576/"
                    ]
                },
                "name": "pairs2hic",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "hic",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_hic",
                        "target": [
                            {
                                "name": "output_hic"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "ncores",
                        "source": [
                            {
                                "name": "ncores"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "binsize",
                        "source": [
                            {
                                "name": "binsize"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "pairs",
                        "source": [
                            {
                                "name": "output_pairs",
                                "step": "merge_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "aggregation"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23555/"
                    ]
                },
                "name": "cooler",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "cool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_cool",
                        "target": [
                            {
                                "name": "out_cool"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Hi-C processing part B revision 44",
        "uuid": "d9e9c966-56d9-47e8-ae21-47f94a1af417",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFG6JYY2P",
        "arguments": [
            {
                "argument_format": "hic",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "input_hic"
            },
            {
                "argument_format": "mcool",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "input_mcool"
            },
            {
                "argument_format": "mcool",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "output_mcool"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "format_integration",
        "data_types": [
            "Hi-C"
        ],
        "description": "add-hic-normvector-to-mcool",
        "lab": "4dn-dcic-lab",
        "name": "add-hic-normvector-to-mcool/2",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "hic",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_hic",
                        "source": [
                            {
                                "name": "input_hic"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "mcool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_mcool",
                        "source": [
                            {
                                "name": "input_mcool"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23555/"
                    ]
                },
                "name": "add-hic-normvector-to-mcool",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "mcool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_mcool",
                        "target": [
                            {
                                "name": "output_mcool"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "add-hic-normvector-to-mcool",
        "uuid": "e8b6d4be-20c4-4e39-b1a3-f04592894521",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFG6JJBM8",
        "arguments": [
            {
                "argument_format": "mcool",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "input_mcool"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nres"
            },
            {
                "argument_format": "normvector_juicerformat",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "output_normvector"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "data extraction",
        "data_types": [
            "Hi-C"
        ],
        "description": "extract-mcool-normvector-for-juicebox",
        "lab": "4dn-dcic-lab",
        "name": "extract-mcool-normvector-for-juicebox/2",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "mcool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_mcool",
                        "source": [
                            {
                                "name": "input_mcool"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter"
                        },
                        "name": "nres",
                        "source": [
                            {
                                "name": "nres"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/c91a2c9d-079c-4647-9951-da95f2c9baf1/"
                    ]
                },
                "name": "extract-mcool-normvector-for-juicebox",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "normvector_juicerformat",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_normvector",
                        "target": [
                            {
                                "name": "output_normvector"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "extract-mcool-normvector-for-juicebox",
        "uuid": "441b46f5-5193-41ee-a90e-c7a74fbb65c1",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFG6J82TH",
        "arguments": [
            {
                "argument_format": "hic",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "input_hic"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "min_res"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "max_mem"
            },
            {
                "argument_format": "hic",
                "argument_type": "Output processed file",
                "description": "",
                "workflow_argument_name": "output_hic"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "normalization",
        "data_types": [
            "Hi-C"
        ],
        "description": "addnormtohic",
        "lab": "4dn-dcic-lab",
        "name": "addnormtohic/7",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "hic",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_hic",
                        "source": [
                            {
                                "name": "input_hic"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "min_res",
                        "source": [
                            {
                                "name": "min_res"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "max_mem",
                        "source": [
                            {
                                "name": "max_mem"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "normalization"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23576/"
                    ]
                },
                "name": "addnormtohic",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "hic",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_hic",
                        "target": [
                            {
                                "name": "output_hic"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "addnormtohic",
        "uuid": "e554d10d-d1e7-4055-aef6-4226ff1bcdb2",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWF06BPEF2",
        "arguments": [
            {
                "argument_format": "cool",
                "argument_type": "Input file",
                "workflow_argument_name": "input_cool"
            },
            {
                "argument_format": "hic",
                "argument_type": "Input file",
                "workflow_argument_name": "input_hic"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "ncores"
            },
            {
                "argument_format": "mcool",
                "argument_type": "Output processed file",
                "workflow_argument_name": "output_mcool"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "aggregation",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Hi-C processing partC Revision 6",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-partc/6",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "cool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_cool",
                        "source": [
                            {
                                "name": "input_cool"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "ncores",
                        "source": [
                            {
                                "name": "ncores"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "aggregation",
                        "normalization",
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23555/"
                    ]
                },
                "name": "cool2mcool",
                "outputs": [
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "file_format": "mcool",
                            "cardinality": "single"
                        },
                        "name": "output_mcool",
                        "target": [
                            {
                                "name": "input_mcool",
                                "step": "add_hic_normvector_to_mcool"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "file_format" : "mcool",
                            "cardinality": "single"
                        },
                        "name": "input_mcool",
                        "source": [
                            {
                                "name": "output_mcool",
                                "step": "add_hic_normvector_to_mcool"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/c91a2c9d-079c-4647-9951-da95f2c9baf1/"
                    ]
                },
                "name": "extract_mcool_normvector_for_juicebox",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "normvector_juicerformat",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_normvector",
                        "target": [
                            {
                                "name": "output_normvector"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "hic",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_hic",
                        "source": [
                            {
                                "name": "input_hic"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": false,
                            "type": "data file",
                            "file_format": "mcool",
                            "cardinality": "single"
                        },
                        "name": "input_mcool",
                        "source": [
                            {
                                "name": "output_mcool",
                                "step": "cool2mcool"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d8dd-4da9-950c-2ca994b23555/"
                    ]
                },
                "name": "add_hic_normvector_to_mcool",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "mcool",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "output_mcool",
                        "target": [
                            {
                                "name": "output_mcool"
                            },
                            {
                                "name": "input_mcool",
                                "step": "extract_mcool_normvector_for_juicebox"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "hi-c-processing-partc/6",
        "uuid": "c6480905-49e5-4c33-afab-9ec90d65faf3",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWFZOGJEI4",
        "app_name": "bwa-mem",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq1"
            },
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq2"
            },
            {
                "argument_format": "bwaIndex",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "bwa_index"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nThreads"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_bam"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "alignment",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "bwa-mem.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Creating a lossless alignment bam file from a pair of fastq files",
        "lab": "4dn-dcic-lab",
        "name": "bwa-mem",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq1",
                        "source": [
                            {
                                "name": "fastq1"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq2",
                        "source": [
                            {
                                "name": "fastq2"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bwaIndex",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bwa_index",
                        "source": [
                            {
                                "name": "bwa_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nThreads"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/02d636b9-d82d-4da9-950c-2ca994a13209/"
                    ]
                },
                "name": "bwa-mem",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_bam",
                        "target": [
                            {
                                "name": "out_bam"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Alignment for Hi-C using bwa-mem",
        "uuid": "0fbe4db8-0b5f-448e-8b58-3f8c84baabf5",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWF84NFOQP",
        "app_name": "bwa-mem",
        "app_version": "dev",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq1"
            },
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "fastq2"
            },
            {
                "argument_format": "bwaIndex",
                "argument_type": "Input file",
                "description": "",
                "workflow_argument_name": "bwa_index"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nThreads"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_bam"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "alignment",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem/",
        "cwl_main_filename": "bwa-mem.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Creating a lossless alignment bam file from a pair of fastq files",
        "lab": "4dn-dcic-lab",
        "name": "bwa-mem",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq1",
                        "source": [
                            {
                                "name": "fastq1"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq2",
                        "source": [
                            {
                                "name": "fastq2"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bwaIndex",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bwa_index",
                        "source": [
                            {
                                "name": "bwa_index"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nThreads"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "software_used": [
                        "/softwares/42adeb1b-c46c-4ba8-b191-56036ddcd544/"
                    ]
                },
                "name": "bwa-mem",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_bam",
                        "target": [
                            {
                                "name": "out_bam"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Alignment for Hi-C using bwa-mem",
        "uuid": "3feedadc-50f9-4bb4-919b-09a8b731d0cc",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWF37VHW0F",
        "app_name": "pairsam-parse-sort",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "bam",
                "argument_type": "Input file",
                "workflow_argument_name": "bam"
            },
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chromsize"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nThreads"
            },
            {
                "argument_format": "pairsam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_pairsam"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "annotation+sorting",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "pairsam-parse-sort.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Parsing and Sorting for Hi-C using pairsamtools",
        "lab": "4dn-dcic-lab",
        "name": "pairsam-parse-sort",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "bam",
                        "source": [
                            {
                                "name": "bam"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chromsize",
                        "source": [
                            {
                                "name": "chromsize"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nThreads"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "sorting"
                    ],
                    "software_used": [
                        "/softwares/c9bf856d-0356-4a8e-8141-2fea6a0ac550/"
                    ]
                },
                "name": "pairsam-parse-sort",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairsam",
                        "target": [
                            {
                                "name": "out_pairsam"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Parsing and Sorting for Hi-C using pairsamtools",
        "uuid": "65586d4b-1e3b-4b31-891e-11f48c816545",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWF3YV81HS",
        "app_name": "pairsam-merge",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "pairsam",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairsams"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nThreads"
            },
            {
                "argument_format": "pairsam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "merged_pairsam"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "merging",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "pairsam-merge.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Merging for Hi-C using pairsamtools",
        "lab": "4dn-dcic-lab",
        "name": "pairsam-merge",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "array"
                        },
                        "name": "input_pairsams",
                        "source": [
                            {
                                "name": "input_pairsams"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nThreads"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "merging"
                    ],
                    "software_used": [
                        "/softwares/c9bf856d-0356-4a8e-8141-2fea6a0ac550/"
                    ]
                },
                "name": "pairsam-merge",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "merged_pairsam",
                        "target": [
                            {
                                "name": "merged_pairsam"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Merging for Hi-C using pairsamtools",
        "uuid": "af8908bf-fdcb-40be-8bca-f1a49226bd20",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWF1Y7DN3H",
        "app_name": "pairsam-markasdup",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "pairsam",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairsams"
            },
            {
                "argument_format": "pairsam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "out_markedpairsam"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "annotating",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "pairsam-markasdup.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Duplicate Marking for Hi-C using pairsamtools",
        "lab": "4dn-dcic-lab",
        "name": "pairsam-markasdup",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairsams",
                        "source": [
                            {
                                "name": "input_pairsams"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "annotating"
                    ],
                    "software_used": [
                        "/softwares/c9bf856d-0356-4a8e-8141-2fea6a0ac550/"
                    ]
                },
                "name": "pairsam-markasdup",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_markedpairsam",
                        "target": [
                            {
                                "name": "out_markedpairsam"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Duplicate Marking for Hi-C using pairsamtools",
        "uuid": "a18978fa-7e78-488f-8e6b-bfb6f63b8861",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWF38VH15",
        "app_name": "pairsam-filter",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "pairsam",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairsam"
            },
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chromsize"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "secondary_file_formats": [
                    "pairs_px2"
                ],
                "workflow_argument_name": "dedup_pairs"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "lossless_bamfile"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "filtering",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "pairsam-filter.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Filtering for Hi-C using pairsamtools",
        "lab": "4dn-dcic-lab",
        "name": "pairsam-filter",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairsam",
                        "source": [
                            {
                                "name": "input_pairsam"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chromsize",
                        "source": [
                            {
                                "name": "chromsize"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "filtering"
                    ],
                    "software_used": [
                        "/softwares/c9bf856d-0356-4a8e-8141-2fea6a0ac550/"
                    ]
                },
                "name": "pairsam-filter",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "secondary_file_formats": [
                                "pairs_px2"
                            ],
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "dedup_pairs",
                        "target": [
                            {
                                "name": "dedup_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "lossless_bamfile",
                        "target": [
                            {
                                "name": "lossless_bamfile"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Filtering for Hi-C using pairsamtools",
        "uuid": "3758e00c-2035-43c6-b783-bb92afe57c99",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWZJ2G671",
        "app_name": "addfragtopairs",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs"
            },
            {
                "argument_format": "juicer_format_restriction_site_file",
                "argument_type": "Input file",
                "workflow_argument_name": "restriction_file"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "secondary_file_formats": [
                    "pairs_px2"
                ],
                "workflow_argument_name": "out_pairs"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "format conversion",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "addfragtopairs.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Adding restriction fragment information for Hi-C using pairsamtools",
        "lab": "4dn-dcic-lab",
        "name": "addfragtopairs",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "juicer_format_restriction_site_file",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "restriction_file",
                        "source": [
                            {
                                "name": "restriction_file"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/e17c3e9c-8882-4478-93da-062c5213341d/"
                    ]
                },
                "name": "addfragtopairs",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "secondary_file_formats": [
                                "pairs_px2"
                            ],
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs",
                        "target": [
                            {
                                "name": "out_pairs"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Adding restriction fragment information for Hi-C using pairsamtools",
        "uuid": "ef125750-8df2-418e-a1ee-402285f9dd93",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "accession": "4DNWZH36VU2",
        "app_name": "pairs-patch",
        "app_version": "0.2.0",
        "arguments": [
            {
                "argument_format": "pairs",
                "argument_type": "Input file",
                "workflow_argument_name": "input_pairs"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "secondary_file_formats": [
                    "pairs_px2"
                ],
                "workflow_argument_name": "out_pairs"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "format conversion",
        "cwl_child_filenames": [],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/0.2.0/cwl_awsem/",
        "cwl_main_filename": "pairs-patch.cwl",
        "cwl_pointer": "",
        "data_types": [
            "Hi-C"
        ],
        "description": "Patching pairs file for Hi-C using pairsamtools",
        "lab": "4dn-dcic-lab",
        "name": "pairs-patch",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairs",
                        "source": [
                            {
                                "name": "input_pairs"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "file format conversion"
                    ],
                    "software_used": [
                        "/softwares/e17c3e9c-8882-4478-93da-062c5213341d/"
                    ]
                },
                "name": "pairs-patch",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "secondary_file_formats": [
                                "pairs_px2"
                            ],
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_pairs",
                        "target": [
                            {
                                "name": "out_pairs"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Patching pairs file for Hi-C using pairsamtools",
        "uuid": "7e5dcad0-d8da-4286-9253-a779d5310a49",
        "workflow_diagram": "",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "app_name": "hi-c-processing-bam",
        "arguments": [
            {
                "argument_format": "bam",
                "argument_type": "Input file",
                "workflow_argument_name": "input_bams"
            },
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chromsize"
            },
            {
                "argument_format": "juicer_format_restriction_site_file",
                "argument_type": "Input file",
                "workflow_argument_name": "restriction_file"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nthreads_parse_sort"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nthreads_merge"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "annotated_bam"
            },
            {
                "argument_format": "pairs",
                "argument_type": "Output processed file",
                "secondary_file_formats": [
                    "pairs_px2"
                ],
                "workflow_argument_name": "filtered_pairs"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "filter",
        "cwl_child_filenames": [
            "pairsam-parse-sort.cwl",
            "pairsam-merge.cwl",
            "pairsam-markasdup.cwl",
            "pairsam-filter.cwl"
        ],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem/",
        "cwl_main_filename": "hi-c-processing-bam.cwl",
        "data_types": [
            "Hi-C"
        ],
        "description": "This is a subworkflow of the Hi-C data processing pipeline. It takes a bam file as input and performs parsing, sorting, filtering and deduping. It produces two output files, a lossless, filter-annotated bam file and a filtered pairs (contact list) file.",
        "lab": "4dn-dcic-lab",
        "name": "hi-c-processing-bam",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "array"
                        },
                        "name": "bam",
                        "source": [
                            {
                                "name": "input_bams"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "chromsize",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chromsize",
                        "source": [
                            {
                                "name": "chromsize"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "Threads",
                        "source": [
                            {
                                "name": "nthreads_parse_sort"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "annotation",
                        "sorting"
                    ],
                    "description": "Parsing and sorting bam file",
                    "software_used": [
                        "/softwares/58ed98d7-10d8-4c51-8166-4a813c62ef8c/"
                    ]
                },
                "name": "pairsam-parse-sort",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "sorted_pairsam",
                        "target": [
                            {
                                "name": "input_pairsams",
                                "step": "pairsam-merge"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairsams",
                        "source": [
                            {
                                "name": "sorted_pairsam",
                                "step": "pairsam-parse-sort"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nthreads_merge"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "merging"
                    ],
                    "description": "Merging pairsam files",
                    "software_used": [
                        "/softwares/58ed98d7-10d8-4c51-8166-4a813c62ef8c/"
                    ]
                },
                "name": "pairsam-merge",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "merged_pairsam",
                        "target": [
                            {
                                "name": "input_pairsam",
                                "step": "pairsam-markasdup"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairsam",
                        "source": [
                            {
                                "name": "merged_pairsam",
                                "step": "pairsam-merge"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "filter"
                    ],
                    "description": "Marking duplicates to pairsam file",
                    "software_used": [
                        "/softwares/58ed98d7-10d8-4c51-8166-4a813c62ef8c/"
                    ]
                },
                "name": "pairsam-markasdup",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "dupmarked_pairsam",
                        "target": [
                            {
                                "name": "input_pairsam",
                                "step": "pairsam-filter"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "pairsam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_pairsam",
                        "source": [
                            {
                                "name": "dupmarked_pairsam",
                                "step": "pairsam-markasdup"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "chromsize",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chromsize",
                        "source": [
                            {
                                "name": "chromsize"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "filter",
                        "file format conversion"
                    ],
                    "description": "Filtering duplicate and invalid reads",
                    "software_used": [
                        "/softwares/58ed98d7-10d8-4c51-8166-4a813c62ef8c/"
                    ]
                },
                "name": "pairsam-filter",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "lossless_bamfile",
                        "target": [
                            {
                                "name": "annotated_bam"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "pairs",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "filtered_pairs",
                        "target": [
                            {
                                "name": "filtered_pairs"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Hi-C Post-alignment Processing",
        "uuid": "023bfb3e-9a8b-42b9-a9d4-216079526f68",
        "workflow_type": "Hi-C data analysis"
    },
    {
        "app_name": "repliseq-parta",
        "arguments": [
            {
                "argument_format": "fastq",
                "argument_type": "Input file",
                "workflow_argument_name": "fastq"
            },
            {
                "argument_format": "bwaIndex",
                "argument_type": "Input file",
                "workflow_argument_name": "bwaIndex"
            },
            {
                "argument_format": "chromsizes",
                "argument_type": "Input file",
                "workflow_argument_name": "chromsizes"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "nthreads"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "memperthread"
            },
            {
                "argument_type": "parameter",
                "workflow_argument_name": "winsize"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "bam"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "filtered_sorted_bam"
            },
            {
                "argument_format": "bam",
                "argument_type": "Output processed file",
                "workflow_argument_name": "filtered_sorted_deduped_bam"
            },
            {
                "argument_type": "Output QC file",
                "workflow_argument_name": "dedup_qc_report"
            },
            {
                "argument_format": "bg",
                "argument_type": "Output processed file",
                "workflow_argument_name": "count_bg"
            }
        ],
        "award": "1U01CA200059-01",
        "category": "align + filter + count",
        "cwl_child_filenames": [
            "clip.cwl",
            "align.cwl",
            "filtersort.cwl",
            "dedup.cwl",
            "count.cwl"
        ],
        "cwl_directory_url": "https://raw.githubusercontent.com/4dn-dcic/pipelines-cwl/dev/cwl_awsem/",
        "cwl_main_filename": "repliseq-parta.cwl",
        "data_types": [
            "Repli-seq"
        ],
        "description": "This is a subworkflow of the Repli-seq data processing pipeline. It takes a raw fastq file, aligns to the reference genome, performs filtering and reports read counts in a bedgraph (bg) format.",
        "lab": "4dn-dcic-lab",
        "name": "repliseq-parta",
        "steps": [
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": true,
                            "type": "data file",
                            "cardinality" : "single"
                        },
                        "name": "input_fastq",
                        "source": [
                            {
                                "name": "fastq"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "adapter removal"
                    ],
                    "description": "Adapter removal according to the Repli-seq pipeline",
                    "software_used": [
                        "/software/97ffd707-b673-4184-a0f6-ca1dfc324067/",
                        "/software/653499f6-0b91-48e0-b2d6-a40e1771e466/"
                    ]
                },
                "name": "clip",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": false,
                            "type": "data file",
                            "cardinality" : "single"
                        },
                        "name": "out_clipped_fastq",
                        "target": [
                            {
                                "name": "fastq1",
                                "step": "align"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "fastq",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "fastq1",
                        "source": [
                            {
                                "name": "out_clipped_fastq",
                                "step": "clip"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "bwaIndex",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "bwa_index",
                        "source": [
                            {
                                "name": "bwaIndex"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nThreads",
                        "source": [
                            {
                                "name": "nthreads"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "alignment"
                    ],
                    "description": "Alignment according to the Repli-seq pipeline",
                    "software_used": [
                        "/software/5befdeda-66a8-43bc-a469-5a5e7248198e/",
                        "/software/653499f6-0b91-48e0-b2d6-a40e1771e466/"
                    ]
                },
                "name": "align",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_bam",
                        "target": [
                            {
                                "name": "bam"
                            },
                            {
                                "name": "input_bam",
                                "step": "filtersort"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_bam",
                        "source": [
                            {
                                "name": "out_bam",
                                "step": "align"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "nthreads",
                        "source": [
                            {
                                "name": "nthreads"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "memperthread",
                        "source": [
                            {
                                "name": "memperthread"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "filtering",
                        "sorting"
                    ],
                    "description": "Filtering and sorting according to the Repli-seq pipeline",
                    "software_used": [
                        "/software/752e712f-4ebe-4335-a95e-53cd55a8a42f/",
                        "/software/653499f6-0b91-48e0-b2d6-a40e1771e466/"
                    ]
                },
                "name": "filtersort",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_filtered_sorted_bam",
                        "target": [
                            {
                                "name": "filtered_sorted_bam"
                            },
                            {
                                "name": "input_bam",
                                "step": "dedup"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_bam",
                        "source": [
                            {
                                "name": "out_filtered_sorted_bam",
                                "step": "filtersort"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "duplicate removal"
                    ],
                    "description": "PCR Duplicate removal according to the Repli-seq pipeline",
                    "software_used": [
                        "/software/752e712f-4ebe-4335-a95e-53cd55a8a42f/",
                        "/software/653499f6-0b91-48e0-b2d6-a40e1771e466/"
                    ]
                },
                "name": "dedup",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_deduped_bam",
                        "target": [
                            {
                                "name": "filtered_sorted_deduped_bam"
                            },
                            {
                                "name": "input_bam",
                                "step": "count"
                            }
                        ]
                    }
                ]
            },
            {
                "inputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": false,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "input_bam",
                        "source": [
                            {
                                "name": "out_deduped_bam",
                                "step": "dedup"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "file_format": "chromsizes",
                            "global": true,
                            "type": "reference file",
                            "cardinality": "single"
                        },
                        "name": "chrsizes",
                        "source": [
                            {
                                "name": "chromsizes"
                            }
                        ]
                    },
                    {
                        "meta": {
                            "global": true,
                            "type": "parameter",
                            "cardinality": "single"
                        },
                        "name": "winsize",
                        "source": [
                            {
                                "name": "winsize"
                            }
                        ]
                    }
                ],
                "meta": {
                    "analysis_step_types": [
                        "binning",
                        "aggregation"
                    ],
                    "description": "Read aggregation according to the Repli-seq pipeline",
                    "software_used": [
                        "/software/13d47cb7-79d1-4472-8d6f-1e1263631b4e/",
                        "/software/653499f6-0b91-48e0-b2d6-a40e1771e466/"
                    ]
                },
                "name": "count",
                "outputs": [
                    {
                        "meta": {
                            "file_format": "bam",
                            "global": true,
                            "type": "data file",
                            "cardinality": "single"
                        },
                        "name": "out_count_bg",
                        "target": [
                            {
                                "name": "count_bg"
                            }
                        ]
                    }
                ]
            }
        ],
        "title": "Repli-seq data processing pipeline for alignment, filtering and counting",
        "uuid": "146da22a-502d-4500-bf57-a7cf0b4b2364",
        "workflow_type": "Repli-seq data processing"
    }
]