/* Variables */
$mainThemeColor: 			#ffffff; /* i.e. the background color ..for now */

$appVersionHeight:          0px;
$footerHeight: 				50px + $appVersionHeight;
$footerTopBorderHeight:		0px;
$appBackgroundColor:        #fff; /* Not sure where $mainThemeColor is used... definitely not #application background-color, so creating new one */

$tableHeadFootBackgroundColor: #000000;

$mobile-font-factor: 1;

$navbar-default-bg: #f8f8f8; // Bootstrap default is #F8F8F8
$navbar-fixed-breakpoint: $screen-md-min; // Use instead of Bootstrap's $grid-float-breakpoint as we want nav to become fixed later.
$navbar-link-color : #777;
$navbar-link-hover-color : #000000;
$navbar-link-active-color : #000;
$navbar-link-active-background-color: #eee;

$modal-backdrop-opacity : 0.8;

$facetlist-selected-term-color : #248bac;

$audit-color-warning : #e29302;
$audit-color-error : #bd0000;
$audit-color-internal-action: #d0d0d0;

$font-family-sans-serif     : "Mada", "Work Sans", Helvetica, Arial, sans-serif;
$font-family-serif          : "Yrsa", "Times New Roman", Georgia, Times, serif;
$font-family-monospace      : "Source Code Pro", Consolas, monospace;

// Pass value with CSS units and get just the value back
@function strip-units($value) {
    @return $value / ($value * 0 + 1);
}

// rem font sizing with pre-CSS3 fallback. Pass "true" in 2nd parm to add !important
// Conversions from px (not exact -- just convenient)
// 10px: 0.7
// 11px: 0.8
// 12px: 0.85
// 13px: 0.9
// 14px: 1.0
// 15px: 1.1
// 16px: 1.2
// 18px: 1.3
// 20px: 1.4

@mixin font-size($size, $important: false) {
    font-size: round($size * strip-units($font-size-base)) + px + (if($important, ' !important',''));
    font-size: $size + rem + (if($important, ' !important',''));
}


@mixin planned-submitted-cell-styles {
	&.cellType-submitted {
        background-color: #53a74e !important;
        &.hoverable:hover {
            background-color: darken($color: #53a74e, $amount: 10) !important;
        }
	}
	&.cellType-planned {
        background-color: rgb(190, 190, 190) !important;
        &.hoverable:hover {
            background-color: darken($color: rgb(190, 190, 190), $amount: 10) !important;
        }
	}
	&.cellType-internal-release {
		background-color: rgb(190, 190, 190) !important;
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="5 5 95 95"><polygon points="100,0 0,100 100,100 100,0" style="fill:#53a74e; stroke: none;"/></svg>');
        background-size: 108%;
        background-repeat: no-repeat;
        &.hoverable:hover {
            background-color: darken($color: rgb(190, 190, 190), $amount: 10) !important;
        }
    }
    &.cellType-in-submission {
		background-color: rgb(190, 190, 190) !important;
        background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="5 5 95 95"><polygon points="100,0 0,100 100,100 100,0" style="fill:#d5d813; stroke: none;"/></svg>');
        background-size: 108%;
        background-repeat: no-repeat;
        &.hoverable:hover {
            background-color: darken($color: rgb(190, 190, 190), $amount: 10) !important;
        }
	}
	&.cellType-none {
		background-color: transparent !important;
    }
    &.cellType-out-of-date {
        background-color: rgba(162, 145, 55, 0.75) !important;
        &.hoverable:hover {
            background-color: darken($color: rgba(162, 145, 55, 0.75), $amount: 10) !important;
        }
    }
}










/* BASE STYLES */
/* Note: most base styles handled by Bootstrap, with variable settings in bootstrap/_variables.scss */

html {
    font-size: $font-size-base * $mobile-font-factor;

    @media screen and (min-width: $screen-sm-min) {
        font-size: $font-size-base;

    overflow-y: scroll;
    }
}

body {
    text-rendering: optimizeLegibility;
    background: #f8f8f8 !important;
    @include font-size(1);
}

.float-wrap { overflow: hidden; }

[hidden] { display: none !important; }

#slot-application {
	height: 100%;
    background-color: $appBackgroundColor;
}

#application {
    height: 100%;
    background-color: $appBackgroundColor;
}

hr { clear: both; }

figure {
	img { max-width: 100%; height: auto; }
	margin-bottom: 1em;
}

.sentence-case-block {
    display: inline-block;

    &::first-letter,
    &:first-letter {
        text-transform: uppercase;
    }
}

.sentence-case::first-letter { text-transform: uppercase; }
.sentence-case:first-letter { text-transform: uppercase; } // older browser support

// Replace Bootstrap's header sizes
h1, .h1 { @include font-size(2.6); }
h2, .h2 { @include font-size(2.1); }
h3, .h3 { @include font-size(1.7); }
h4, .h4 { @include font-size(1.3); }
h5, .h5 { @include font-size(1); }
h6, .h6 { @include font-size(0.85); }

blockquote {
    @include font-size(1);
}

.repl-acc {
    margin: -5px 0 15px;
    @include font-size(1);
    font-weight: normal;
    color: #808080;
}

*, *:after, *:before {
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
    box-sizing: border-box;
}

.browser-error {
    margin: 10px;
    text-align: center;
}

// Fourfront SVG logo

svg.fourfront_logo_svg_instance {
    > ellipse,
    > .fourfront-logo-background-circle {
        fill:url(#fourfront_linear_gradient);
        //stroke:url(#fourfront_linear_gradient);
        stroke: transparent;
        stroke-width: 1px;
    }
    > text {
        font-size:25px;
        fill:#fff;
        font-family: "Mada","Work Sans",Helvetica,Arial,sans-serif;
        font-weight: 600;
        stroke: transparent;
        stroke-width: 0px;
        stroke-linejoin: round;
    }
    > .fourfront-logo-foreground-circle {
        opacity : 0;
        fill : transparent;
        stroke-Width : 15px;
        stroke: rgba(0,0,0,0.2);
    }
}

