'use strict';

import createReactClass from 'create-react-class';
import PropTypes from 'prop-types';

/* Written by Carl, used to test the homepage rendered by home.js
Specifically, test the creation of Accouncements and Getting Started entries,
making sure they collapse correctly, and test the fetchedParams used to build
the banner.*/

jest.autoMockOff();

// Fixes https://github.com/facebook/jest/issues/78
jest.dontMock('react');
jest.dontMock('underscore');

describe('Testing home.js', function() {
    var React, HomePage, testItem, TestUtils, page, data, _, banners, Wrapper, statics, sinon, server;

    beforeAll(function() {
        React = require('react');
        TestUtils = require('react-dom/lib/ReactTestUtils');
        _ = require('underscore');
        HomePage = require('../static-pages/HomePage').default;
        statics = require('../../data/statics'); // Maybe keep version of statics.js and put into /testdata/

        sinon = require('sinon');
        server = sinon.fakeServer.create();
        
        server.respondWith(
            "GET",
            '/profiles/',
            [
                200, 
                { "Content-Type" : "application/json" },
                '<html></html>' // Don't actually need content JSON here for test.
            ]
        );

        Wrapper = createReactClass({
            childContextTypes: {
                fetch: PropTypes.func
            },

            // Retrieve current React context
            getChildContext: function() {
                return {
                    fetch: this.fetch
                };
            },

            fetch: function(url, options) {
                return null;
            },

            render: function() {
                return (
                    <div>{this.props.children}</div>
                );
            }
        });
        page = TestUtils.renderIntoDocument(
            <Wrapper>
                <HomePage context={{ 'content' : {
                    "description": "<p>\nThe 4D Nucleome Data Portal hosts data generated by the 4DN Network and other reference nucleomics data sets.</p>",
                    "links": "Links stuff"
                } }} />
            </Wrapper>
        );
    });

    afterAll(function(){
        server.restore();
    });
    
    /*
    Banner not on homepage at moment.
    it('has one banner with three entries. Entry links are correct', function() {
        var banners = TestUtils.scryRenderedDOMComponentsWithClass(page, 'fourDN-banner');
        var bannerEntries = TestUtils.scryRenderedDOMComponentsWithClass(page, 'banner-entry');
        expect(banners.length).toEqual(1);
        expect(bannerEntries.length).toEqual(3);
        expect(bannerEntries[0].getAttribute('href')).toEqual('/browse/?type=ExperimentSetReplicate&experimentset_type=replicate&limit=all');
        expect(bannerEntries[1].getAttribute('href')).toEqual('/browse/?type=ExperimentSetReplicate&experimentset_type=replicate&limit=all');
        expect(bannerEntries[2].getAttribute('href')).toEqual('/search/?type=Biosource');
    });
    */

    it('has welcome, announcements headers', function() {
        var newsHeaders = TestUtils.scryRenderedDOMComponentsWithClass(page, "homepage-section-title");
        expect(newsHeaders.length).toEqual(2);
    });

});
