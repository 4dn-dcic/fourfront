===============================
Component: ``viz/BarPlotChart``
===============================




Visualization component for the BarPlot. 
Contains chart and labels only -- no controls.
To add controls, wrap the chart in BarPlotChart.UIControlsWrapper, which will feed its state as props to BarPlotChart and has UI components
for adjusting its state to select Charting options.
Use BarPlotChart (or UIControlsWrapper, if is wrapping BarPlotChart) as child of ChartDataController.provider, which will feed props.experiments and props.filteredExperiments.


.. contents:: Local Navigation
   :local:





Props
=====




``experiments``
---------------

Type: **Array.<Object>**

.. js:property:: experiments

List of all experiments as stored in and provided by ChartDataController.



``filteredExperiments``
-----------------------

Type: **Array.<Object>**

.. js:property:: filteredExperiments

List of experiments which match current filters. Stored in and provided by ChartDataController[.Provider].



``onBarPartMouseEnter``
-----------------------

Type: **function**

.. js:property:: onBarPartMouseEnter

A callback function for when someone's cursor enters a bar part. Takes the node/datum of the bar part (0) and MouseEvent (1) as arguments.



``onBarPartMouseLeave``
-----------------------

Type: **function**

.. js:property:: onBarPartMouseLeave

Counterpart for props.onBarPartMouseEnter.



``fields``
----------

Type: **Array.<Object>**

.. js:property:: fields

List of field objects containing 'field'[, 'name'][, 'description'][, 'title']. If length === 1, only plots bars (no bar parts), if length === 2, plots 2nd field as subdivision. Provide more along with props.useOnlyPopulatedFields = true to have chart auto-select the fields to plot based on which has than 1 term.



``useOnlyPopulatedFields``
--------------------------

Type: **boolean**

.. js:property:: useOnlyPopulatedFields

Defaults to false. If true, and list of fields is longer than 2, will visualize first field(s) found in list with more than 1 term.



``width``
---------

Type: **number**

.. js:property:: width

Self explanatory.



``height``
----------

Type: **number**

.. js:property:: height

Self explanatory.



``aggregateType``
-----------------

Type: **string**

.. js:property:: aggregateType

Set by UIControlsWrapper. Controls whether Y-Axis has 'experiment_sets', 'experiments', or 'files'.



``showType``
------------

Type: **string**

.. js:property:: showType

Set by UIControlsWrapper. Controls whether showing "all" experiments or only the selected or "filtered"-in experiments.

Functions
=========



.. _module-viz_BarPlotChart.genChartBarDims:


Public Static ``genChartBarDims``
---------------------------------

Return an object containing bar dimensions for first field which has more than 1 possible term, index of field used, and all fields passed originally.

.. js:function:: genChartBarDims(fields, fields.terms, fields.total[, availWidth][, availHeight][, styleOpts][, useOnlyPopulatedFields][, maxValue])

    
    :param Array.<Object> fields: Array of fields (i.e. from props.fields) which contain counts by term and total added through @see aggregationFxn.genChartData().
    :param Object fields.terms: Object keyed by possible term for field, with value being count of term occurences in [props.]experiments passed to genChartData.
    :param number fields.total: Count of total experiments for which this field is applicable.
    :param number availWidth: Available width, in pixels, for chart.
    :param number availHeight: Available width, in pixels, for chart.
    :param Object styleOpts: Style settings for chart which may contain chart offsets (for axes).
    :param boolean useOnlyPopulatedFields: Determine which fields to show via checking for which fields have multiple terms present.
    :param number maxValue: Maximum y-axis value. Overrides height of bars.
    :returns Object: Object containing bar dimensions for first field which has more than 1 possible term, index of field used, and all fields passed originally.
    

Chart.js:58






.. _module-viz_BarPlotChart.styleOptions:


Instance ``styleOptions``
-------------------------

Gets style options for BarPlotChart instance. Internally, extends BarPlotChart.getDefaultStyleOpts() with props.styleOptions.

.. js:function:: styleOptions()

    
    :returns Object: Style options object.
    

Chart.js:241



.. _module-viz_BarPlotChart.width:


Instance ``width``
------------------



.. js:function:: width()

    
    :returns width(): props.width or width of refs.container, if mounted.
    

Chart.js:247



.. _module-viz_BarPlotChart.height:


Instance ``height``
-------------------



.. js:function:: height()

    
    :returns height(): props.height or height of refs.container, if mounted.
    

Chart.js:262






.. _module-viz_BarPlotChart.getLegendData:


*Deprecated* Instance ``getLegendData``
---------------------------------------

Call this function, e.g. through refs, to grab fields and terms for a/the Legend component.
Internally, runs BarPlotChart.barDataToLegendData().

.. js:function:: getLegendData()

    
    :returns Array|null: List of fields containing terms. For use by legend component.
    

Chart.js:366



.. _module-viz_BarPlotChart.getTopLevelField:


Instance ``getTopLevelField``
-----------------------------

Get the for-bar-filled field object used for the X axis.

.. js:function:: getTopLevelField()

    
    :returns Object: Top-level field containing terms.
    

Chart.js:377



.. _module-viz_BarPlotChart.renderAllExperimentsSilhouette:


Instance ``renderAllExperimentsSilhouette``
-------------------------------------------

Used to help generate "highlighted" selected bars against the output of this: the "all experiments" bars silhoutte.
Used conditionally in BarPlotChart.render to render clones of the BarChart behind the primary bars,
using 'all experiments' data instead of the 'filtered' or 'selected' experiments.

.. js:function:: renderAllExperimentsSilhouette(width, height[, styleOpts])

    
    :param number width: Width of available chart drawing area.
    :param number height: Height of available chart drawing area.
    :param Object styleOpts: Style options for the chart, including gap between bars, maximum bar width, etc.
    :returns Object: "All Experiments" bars silhouttes, wrapped in an object also containing barData for all experiments.
    

Chart.js:718



.. _module-viz_BarPlotChart.render:


Instance ``render``
-------------------

Parses props.experiments and/or props.filterExperiments, depending on props.showType, aggregates experiments into fields,
generates data for chart bars, and then draws and returns chart wrapped in a div React element.

.. js:function:: render()

    
    :returns React.Element: - Chart markup wrapped in a div.
    

Chart.js:765




Members
=======


.. _module-viz_BarPlotChart.Chart:

``Chart``






.. _module-viz_BarPlotChart.statics:

``statics``






.. _module-viz_BarPlotChart.topIndex:

``topIndex``






.. _module-viz_BarPlotChart.termCount:

``termCount``






.. _module-viz_BarPlotChart.height:

``height``






.. _module-viz_BarPlotChart.fields:

``fields``






.. _module-viz_BarPlotChart.gap:

``gap``






.. _module-viz_BarPlotChart.maxBarWidth:

``maxBarWidth``






.. _module-viz_BarPlotChart.maxLabelWidth:

``maxLabelWidth``






.. _module-viz_BarPlotChart.labelRotation:

``labelRotation``






.. _module-viz_BarPlotChart.labelWidth:

``labelWidth``






.. _module-viz_BarPlotChart.yAxisMaxHeight:

``yAxisMaxHeight``






.. _module-viz_BarPlotChart.offset:

``offset``






.. _module-viz_BarPlotChart.mounted:

``mounted``






.. _module-viz_BarPlotChart.mounted:

``mounted``






.. _module-viz_BarPlotChart.propTypes:

``propTypes``




experiments
~~~~~~~~~~~
List of all experiments, with at least fields needed to aggregate by embedded.


filteredExperiments
~~~~~~~~~~~~~~~~~~~
List of selected experiments, with at least fields needed to aggregate by embedded.


fields
~~~~~~
List of at least one field objects, each containing at least 'field' property in object-dot-notation.


fields.field
~~~~~~~~~~~~
Field, in <code>object.dot.notation</code>.


fields.name
~~~~~~~~~~~
Name of field.




.. _module-viz_BarPlotChart.gap:

``gap``






.. _module-viz_BarPlotChart.maxBarWidth:

``maxBarWidth``






.. _module-viz_BarPlotChart.labelRotation:

``labelRotation``






.. _module-viz_BarPlotChart.labelWidth:

``labelWidth``






.. _module-viz_BarPlotChart.offset:

``offset``






.. _module-viz_BarPlotChart.top:

``top``






.. _module-viz_BarPlotChart.bottom:

``bottom``






.. _module-viz_BarPlotChart.left:

``left``






.. _module-viz_BarPlotChart.right:

``right``






.. _module-viz_BarPlotChart.experiments:

``experiments``






.. _module-viz_BarPlotChart.fields:

``fields``






.. _module-viz_BarPlotChart.useOnlyPopulatedFields:

``useOnlyPopulatedFields``






.. _module-viz_BarPlotChart.showType:

``showType``






.. _module-viz_BarPlotChart.aggregateType:

``aggregateType``






.. _module-viz_BarPlotChart.styleOptions:

``styleOptions``







.. _module-viz_BarPlotChart.styleOpts:

``styleOpts``






.. _module-viz_BarPlotChart.prevBarData:

``prevBarData``






.. _module-viz_BarPlotChart.xyCoords:

``xyCoords``






.. _module-viz_BarPlotChart.xyCoords:

``xyCoords``






.. _module-viz_BarPlotChart.fill:

``fill``






.. _module-viz_BarPlotChart.styleOpts:

``styleOpts``






.. _module-viz_BarPlotChart.prevBarData:

``prevBarData``






.. _module-viz_BarPlotChart.color:

``color``






.. _module-viz_BarPlotChart.height:

``height``






.. _module-viz_BarPlotChart.width:

``width``






.. _module-viz_BarPlotChart.backgroundColor:

``backgroundColor``






.. _module-viz_BarPlotChart.labelWidth:

``labelWidth``






.. _module-viz_BarPlotChart.left:

``left``






.. _module-viz_BarPlotChart.right:

``right``






.. _module-viz_BarPlotChart.height:

``height``






.. _module-viz_BarPlotChart.bottom:

``bottom``






.. _module-viz_BarPlotChart.name:

``name``






.. _module-viz_BarPlotChart.term:

``term``






.. _module-viz_BarPlotChart.x:

``x``






.. _module-viz_BarPlotChart.opacity:

``opacity``






.. _module-viz_BarPlotChart.color:

``color``






.. _module-viz_BarPlotChart.position:

``position``






.. _module-viz_BarPlotChart.left:

``left``






.. _module-viz_BarPlotChart.right:

``right``






.. _module-viz_BarPlotChart.bottom:

``bottom``






.. _module-viz_BarPlotChart.width:

``width``






.. _module-viz_BarPlotChart.right:

``right``






.. _module-viz_BarPlotChart.height:

``height``






.. _module-viz_BarPlotChart.width:

``width``






.. _module-viz_BarPlotChart.top:

``top``






.. _module-viz_BarPlotChart.styleOpts:

``styleOpts``






.. _module-viz_BarPlotChart.component:

``component``






.. _module-viz_BarPlotChart.width:

``width``






.. _module-viz_BarPlotChart.height:

``height``






.. _module-viz_BarPlotChart.data:

``data``






.. _module-viz_BarPlotChart.existing:

``existing``






.. _module-viz_BarPlotChart.removing:

``removing``






.. _module-viz_BarPlotChart.allBars:

``allBars``






.. _module-viz_BarPlotChart.allBars:

``allBars``






.. _module-viz_BarPlotChart.term:

``term``






.. _module-viz_BarPlotChart.width:

``width``






.. _module-viz_BarPlotChart.x:

``x``






.. _module-viz_BarPlotChart.height:

``height``






.. _module-viz_BarPlotChart.width:

``width``








