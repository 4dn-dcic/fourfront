===============================
Component: ``viz/QuickInfoBar``
===============================




Bar shown below header on home and browse pages.
Shows counts of selected experiment_sets, experiments, and files against those properties' total counts.


.. contents:: Local Navigation
   :local:





Props
=====




``href``
--------

Type: **string**

.. js:property:: href

Current location/href passed down from Redux store. Used for determining whether to display QuickInfoBar or not.

Functions
=========




.. _module-viz_QuickInfoBar.getInitialState:


Private Instance ``getInitialState``
------------------------------------

Returns an object containing counts for filtered & total experiments, experiment_sets, and files.
Counts are set to null by default, and instance's updateCurrentAndTotalCounts method must be called
each time stats are updated from some high-level component.

Currently this is done by having refs...updateCurrentAndTotalCounts being accessible
through refs.navigation on app component/module, which makes an 'updateStats' instance function available,
which is provided to ChartDataController.

Additionally holds {boolean|string} 'show' property, describing what is shown in bottom part; and a {boolean} 'mounted' property.

.. js:function:: getInitialState()

    
    :returns Object.<number, boolean, string>: Initial State
    

QuickInfoBar.js:49



.. _module-viz_QuickInfoBar.updateCurrentAndTotalCounts:


Public Instance ``updateCurrentAndTotalCounts``
-----------------------------------------------

Publically accessible when QuickInfoBar Component instance has a 'ref' prop set by parent component.
Use to update stats when expSetFilters change.

Currently this is done through ChartDataController, to which an 'updateStats' callback,
itself defined in app Component, is provided on initialization.

.. js:function:: updateCurrentAndTotalCounts(current, total[, callback])

    
    :param Object current: Object containing current counts of 'experiments', 'experiment_sets', and 'files'.
    :param Object total: Same as 'current' param, but containing total counts.
    :param function callback: Optional callback function.
    :returns boolean: true
    

QuickInfoBar.js:76



.. _module-viz_QuickInfoBar.updateCurrentCounts:


Public Instance ``updateCurrentCounts``
---------------------------------------

Same as updateCurrentAndTotalCounts(), but only for current counts.

.. js:function:: updateCurrentCounts(newCounts[, callback])

    
    :param Object newCounts: Object containing current counts of 'experiments', 'experiment_sets', and 'files'.
    :param function callback: Optional callback function.
    :returns boolean: true
    

QuickInfoBar.js:97



.. _module-viz_QuickInfoBar.updateTotalCounts:


Public Instance ``updateTotalCounts``
-------------------------------------

Same as updateCurrentAndTotalCounts(), but only for total counts.

.. js:function:: updateTotalCounts(newCounts[, callback])

    
    :param Object newCounts: Object containing current counts of 'experiments', 'experiment_sets', and 'files'.
    :param function callback: Optional callback function.
    :returns boolean: true
    

QuickInfoBar.js:115



.. _module-viz_QuickInfoBar.isInvisible:


Public Instance ``isInvisible``
-------------------------------

Check if QuickInfoBar instance is currently invisible, i.e. according to props.href.

.. js:function:: isInvisible()

    
    :returns boolean: True if counts are null or on a 'href' is not of a page for which searching or summary is applicable.
    

QuickInfoBar.js:131



.. _module-viz_QuickInfoBar.componentWillReceiveProps:


Private Instance ``componentWillReceiveProps``
----------------------------------------------

Updates state.show if no filters are selected.

.. js:function:: componentWillReceiveProps(nextProps)

    
    :param Object nextProps: Next props.
    :returns undefined: Updates state.show if no filters are selected.
    

QuickInfoBar.js:166



.. _module-viz_QuickInfoBar.componentDidMount:


Private Instance ``componentDidMount``
--------------------------------------

Sets state's 'mounted' property to true.

.. js:function:: componentDidMount()

    
    

QuickInfoBar.js:178











Members
=======


.. _module-viz_QuickInfoBar.offset:

``offset``






.. _module-viz_QuickInfoBar.id:

``id``






.. _module-viz_QuickInfoBar.className:

``className``






.. _module-viz_QuickInfoBar.showCurrent:

``showCurrent``






.. _module-viz_QuickInfoBar.count_experiments:

``count_experiments``






.. _module-viz_QuickInfoBar.count_experiment_sets:

``count_experiment_sets``






.. _module-viz_QuickInfoBar.count_files:

``count_files``






.. _module-viz_QuickInfoBar.count_experiments_total:

``count_experiments_total``






.. _module-viz_QuickInfoBar.count_experiment_sets_total:

``count_experiment_sets_total``






.. _module-viz_QuickInfoBar.count_files_total:

``count_files_total``






.. _module-viz_QuickInfoBar.mounted:

``mounted``






.. _module-viz_QuickInfoBar.show:

``show``






.. _module-viz_QuickInfoBar.count_experiments:

``count_experiments``






.. _module-viz_QuickInfoBar.count_experiment_sets:

``count_experiment_sets``






.. _module-viz_QuickInfoBar.count_files:

``count_files``






.. _module-viz_QuickInfoBar.count_experiments_total:

``count_experiments_total``






.. _module-viz_QuickInfoBar.count_experiment_sets_total:

``count_experiment_sets_total``






.. _module-viz_QuickInfoBar.count_files_total:

``count_files_total``






.. _module-viz_QuickInfoBar.count_experiments:

``count_experiments``






.. _module-viz_QuickInfoBar.count_experiment_sets:

``count_experiment_sets``






.. _module-viz_QuickInfoBar.count_files:

``count_files``






.. _module-viz_QuickInfoBar.count_experiments_total:

``count_experiments_total``






.. _module-viz_QuickInfoBar.count_experiment_sets_total:

``count_experiment_sets_total``






.. _module-viz_QuickInfoBar.count_files_total:

``count_files_total``






.. _module-viz_QuickInfoBar.show:

``show``






.. _module-viz_QuickInfoBar.mounted:

``mounted``






.. _module-viz_QuickInfoBar.cn:

``cn``






.. _module-viz_QuickInfoBar.cn:

``cn``






.. _module-viz_QuickInfoBar.stats:

``stats``






.. _module-viz_QuickInfoBar.stats:

``stats``






.. _module-viz_QuickInfoBar.className:

``className``






.. _module-viz_QuickInfoBar.className:

``className``






.. _module-viz_QuickInfoBar.className:

``className``






.. _module-viz_QuickInfoBar.show:

``show``






.. _module-viz_QuickInfoBar.show:

``show``






.. _module-viz_QuickInfoBar.opacity:

``opacity``






.. _module-viz_QuickInfoBar.show:

``show``






.. _module-viz_QuickInfoBar.opacity:

``opacity``







.. _module-viz_QuickInfoBar.value:

``value``






.. _module-viz_QuickInfoBar.label:

``label``






.. _module-viz_QuickInfoBar.classNameID:

``classNameID``






.. _module-viz_QuickInfoBar.id:

``id``








